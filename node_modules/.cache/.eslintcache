[{"/home/roqa/Documents/Git/portfolio/src/index.tsx":"1","/home/roqa/Documents/Git/portfolio/src/App.tsx":"2","/home/roqa/Documents/Git/portfolio/src/pages/Home/index.tsx":"3","/home/roqa/Documents/Git/portfolio/src/pages/404/index.tsx":"4","/home/roqa/Documents/Git/portfolio/src/pages/Home/Header/index.tsx":"5","/home/roqa/Documents/Git/portfolio/src/pages/Home/Blog/index.tsx":"6","/home/roqa/Documents/Git/portfolio/src/pages/Home/Footer/index.tsx":"7","/home/roqa/Documents/Git/portfolio/src/pages/Home/Projects/index.tsx":"8","/home/roqa/Documents/Git/portfolio/src/components/Buttons/Nav.tsx":"9"},{"size":274,"mtime":1656605818136,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1656605818136,"results":"12","hashOfConfig":"11"},{"size":347,"mtime":1656605818136,"results":"13","hashOfConfig":"11"},{"size":981,"mtime":1656605818136,"results":"14","hashOfConfig":"11"},{"size":4917,"mtime":1657478119373,"results":"15","hashOfConfig":"11"},{"size":13165,"mtime":1657200478032,"results":"16","hashOfConfig":"11"},{"size":530,"mtime":1656605818136,"results":"17","hashOfConfig":"11"},{"size":20450,"mtime":1657483250417,"results":"18","hashOfConfig":"11"},{"size":1656,"mtime":1657108422395,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1jsjig8",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/home/roqa/Documents/Git/portfolio/src/index.tsx",[],[],[],"/home/roqa/Documents/Git/portfolio/src/App.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/Home/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/404/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/Home/Header/index.tsx",["49","50","51","52"],[],"/home/roqa/Documents/Git/portfolio/src/pages/Home/Blog/index.tsx",["53"],[],"import axios from 'axios';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport { FC, useState, useEffect } from 'react';\nimport { useSwipeable } from \"react-swipeable\";\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { FileNav, X } from '../../../components/Buttons/Nav';\n\ninterface BlogProps {\n  heading: string;\n}\n\nconst Blog = () => {\n  const [showBlog1, setShowBlog1] = useState<boolean>(false);\n  const [showBlog2, setShowBlog2] = useState<boolean>(false);\n  const [title, setTitle] = useState<string>('');\n  const [title2, setTitle2] = useState<string>('');\n  const [text, setText] = useState<string>('');\n  const [text2, setText2] = useState<string>('');\n  const [time, setTime] = useState<string>('');\n  const [time2, setTime2] = useState<string>('');\n  const [day, setDay] = useState<string>('');\n  const [day2, setDay2] = useState<string>('');\n  const [date, setDate] = useState<number>(0);\n  const [date2, setDate2] = useState<number>(0);\n  const [counter, setCounter] = useState<number>(0);\n  const [ids, setIDS] = useState<number>(0);\n  const URL:string = \"https://portfolio-blog-posts.herokuapp.com/posts/\";\n  const firstPostURL:string = URL + 0;\n  const secondPostURL:string = URL + 1;\n\n  // get total number of posts\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await axios.get(URL)\n        .then(res => {\n          const ids = res.data.length;\n          setIDS(ids);\n        })\n    }\n    fetchData()\n      .catch(console.error);\n  }, [ids])\n\n  // total posts - 1\n  let numPosts = (ids - 1);\n\n  // get first blog post\n  useEffect(() => {\n    axios.get(firstPostURL)\n      .then((response:any) => {\n        setTitle(response.data.title);\n        setText(response.data.text);\n        setTime(response.data.time);\n        setDay(response.data.day);\n        setDate(response.data.date);\n      })\n  }, [firstPostURL])\n\n  // get second blog post\n    useEffect(() => {\n      axios.get(secondPostURL)\n        .then((response:any) => {\n          setTitle2(response.data.title);\n          setText2(response.data.text);\n          setTime2(response.data.time);\n          setDay2(response.data.day);\n          setDate2(response.data.date);\n        })\n    }, [secondPostURL])\n\n  // next blog post\n  const increase = async() => {\n    if (counter < numPosts) {\n      setCounter(counter => counter + 1);\n      await axios.get(URL + (counter + 1))\n        .then((response:any) => {\n          setTitle(response.data.title);\n          setText(response.data.text);\n          setTime(response.data.time);\n          setDay(response.data.day);\n          setDate(response.data.date);\n        })\n      // get next post title\n      await axios.get(URL + (counter + 2))\n        .then((response:any) => {\n          setTitle2(response.data.title);\n          setText2(response.data.text);\n          setTime2(response.data.time);\n          setDay2(response.data.day);\n          setDate2(response.data.date);\n        })\n    } else if (counter === numPosts) {\n      setCounter(counter => counter = 0);\n      await axios.get(firstPostURL)\n        .then((response:any) => {\n          setTitle(response.data.title);\n          setText(response.data.text);\n          setTime(response.data.time);\n          setDay(response.data.day);\n          setDate(response.data.date);\n        })\n      // get next post title\n      await axios.get(secondPostURL)\n        .then((response:any) => {\n          setTitle2(response.data.title);\n          setText2(response.data.text);\n          setTime2(response.data.time);\n          setDay2(response.data.day);\n          setDate2(response.data.date);\n        })\n    }\n  };\n \n  // previous blog post\n  const decrease = async() => {\n    if (counter === 0) {\n      setCounter(counter => counter = numPosts)\n      await axios.get(URL + (counter + numPosts))\n        .then((response:any) => {\n          setTitle(response.data.title);\n          setText(response.data.text);\n          setTime(response.data.time);\n          setDay(response.data.day);\n          setDate(response.data.date);\n        })\n      // get next post title\n      await axios.get(URL + (counter + numPosts + 1))\n        .then((response:any) => {\n          setTitle2(response.data.title);\n          setText2(response.data.text);\n          setTime2(response.data.time);\n          setDay2(response.data.day);\n          setDate2(response.data.date);\n        })\n    } else if (counter > 0) {\n        setCounter(counter => counter - 1);\n        await axios.get(URL + (counter - 1))\n          .then((response:any) => {\n            setTitle(response.data.title);\n            setText(response.data.text);\n            setTime(response.data.time);\n            setDay(response.data.day);\n            setDate(response.data.date);\n          })\n        // get next post title\n        await axios.get(URL + counter)\n          .then((response:any) => {\n            setTitle2(response.data.title);\n            setText2(response.data.text);\n            setTime2(response.data.time);\n            setDay2(response.data.day);\n            setDate2(response.data.date);\n          })\n    }\n  };\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => increase(),\n    onSwipedRight: () => decrease()\n  });\n\n  return (\n    <section className=\"flex flex-col container mt-28 gap-4 xl:mt-40\">\n      <Heading \n        heading={`Blog`}\n      />\n      <div className=\"md:flex justify-center md:relative md:h-414\">\n        <section className=\"flex flex-col w-auto justify-center md:flex-row-reverse md:gap-x-12 md:absolute\">\n          <>\n            <div className=\"flex flex-col gap-16 md:mb-[-2px] lg:mb-[4px]\">\n              <BlogPostMini \n                showBlog1={showBlog1}\n                setShowBlog1={setShowBlog1}\n                title={title} \n                time={time}\n                text={text}\n                day={day}\n                date={date}\n              />              \n              <BlogPost2Mini \n                showBlog2={showBlog2}\n                setShowBlog2={setShowBlog2}\n                title2={title2}\n                text2={text2}\n              />\n            </div>\n            { showBlog1 ? \n              <BlogPostOverlay \n                showBlog1={showBlog1}\n                setShowBlog1={setShowBlog1}\n                title={title}\n                time={time}\n                text={text}\n                day={day}\n                date={date}\n                handlers={handlers}\n                increase={increase}\n                decrease={decrease}\n              /> \n            : null }\n            { showBlog2 ? \n              <BlogPost2Overlay \n                showBlog2={showBlog2}\n                setShowBlog2={setShowBlog2}\n                title2={title2}\n                text2={text2}\n                time2={time2}\n                day2={day2}\n                date2={date2}\n                handlers={handlers}\n                increase={increase}\n                decrease={decrease}\n              />\n            : null }\n          </>\n          <BlogPic />\n        </section>\n      </div>\n    </section>\n  );\n};\n\nconst Heading: FC<BlogProps> = ({heading}) => (\n  <h2 id=\"blog\" className=\"flex font-mono text-forest-green leading-10 text-2xl uppercase\">\n    {heading}\n  </h2>\n)\n\nconst BlogPic = () => (\n  <>\n    <div className=\"md:hidden flex h-0 w-3/4 pb-55p relative self-center\">\n      <div className=\"absolute inset-0 md:flex self-center md:self-end z-30 bg-[url('https://glennphil.github.io/assets/blog-man.png')] bg-no-repeat bg-center bg-[length:100%_100%] w-full h-full\" />\n    </div>\n    <div className=\"hidden md:flex self-center md:self-end z-30 bg-[url('https://glennphil.github.io/assets/blog-man.png')] bg-no-repeat bg-center bg-[length:320px_244px] w-320 h-244 lg:bg-[length:400px_302px] lg:w-400 lg:h-302\" />\n    <div className=\"hidden md:flex z-20 h-2 bg-white md:w-688 lg:w-884 xl:w-1040 absolute bottom-28px lg:bottom-35px\" />\n  </>\n)\n\nconst BlogPostMini = (obj: {showBlog1:boolean, setShowBlog1:any, title:string; text:string; time:string; day:string; date:number}) => (\n  <>\n    <button onClick={() => obj.setShowBlog1(!obj.showBlog1)}>\n      <>\n        <div className=\"flex flex-col font-mono bg-white w-full h-52 pt-6 px-7 pb-4 rounded-xl relative justify-between md:w-80\">\n          <h6 className=\"flex text-dark-grey text-left font-bold uppercase font-mono\">\n            {obj.title}\n          </h6>\n          <p className=\"line-clamp-4 text-left\">\n            {obj.text}\n          </p>\n          <h6 className=\"flex text-dark-grey text-sm font-mono self-end justify-end uppercase\">\n            {obj.time}&nbsp;{obj.day}&nbsp;{obj.date}\n          </h6>\n        </div>\n        { obj.showBlog1 ? disableBodyScroll(Document as unknown as HTMLElement | Element) : enableBodyScroll(Document as unknown as HTMLElement | Element) } \n      </>\n    </button>\n    <div className=\"h-0 w-0 border-t-white border-l-transparent border-r-transparent border-b-transparent border-solid border-t-30 border-r-30 border-b-0 border-l-0 mt-200px ml-30px absolute\" />\n  </>\n)\n\nconst BlogPost2Mini = (obj: {showBlog2:boolean, setShowBlog2:any; title2:string; text2:string}) => (\n  <>\n    <button onClick={() => obj.setShowBlog2(!obj.showBlog2)}>\n      <>\n        <div className=\"flex flex-col text-left font-mono bg-white w-full h-28 pt-6 px-7 pb-0 rounded-t-xl relative justify-between md:w-80\">\n          <h6 className=\"flex text-dark-grey font-bold uppercase font-mono mb-4 select-none\">\n            {obj.title2}\n          </h6>\n          <p className=\"line-clamp-4 text-left select-none\">\n            {obj.text2}\n          </p>\n        </div>\n        { obj.showBlog2 ? disableBodyScroll(Document as unknown as HTMLElement | Element) : null } \n      </>\n    </button>\n\n    <div className=\"h-8 z-10 -mt-75px mb-8 md:mb-0 -mx-2 bg-dark-grey\" />\n    <div className=\"flex md:hidden w-full h-2 z-20 bg-white -mt-130px mb-8 md:mb-0\" />\n  </>\n)\n\nconst BlogPostOverlay = (obj: {showBlog1:boolean; setShowBlog1:any; title:string; time: string; text: string; day: string; date: number; handlers: object; increase:() => void; decrease:() => void}) => (\n  <div className=\"z-40 fixed w-full h-full inset-0 bg-dark-grey\">\n    <X />\n    <div className=\"z-40 fixed mx-auto md:w-768 inset-0\">\n      <OutsideClickHandler onOutsideClick={() => { obj.setShowBlog1(false) }}>\n        <>\n        <BlogPostBig\n          title={obj.title}\n          time={obj.time}\n          text={obj.text}\n          day={obj.day}\n          date={obj.date}\n          handlers={obj.handlers}\n        /> \n        <FileNav\n          show={obj.showBlog1} \n          setShow={obj.setShowBlog1} \n          increase={obj.increase}\n          decrease={obj.decrease}\n        />\n        </>\n      </OutsideClickHandler>\n    </div>\n  </div>\n)\n\nconst BlogPost2Overlay = (obj: { showBlog2:boolean; setShowBlog2:any; title2:string; time2: string; text2: string; day2: string; date2: number; handlers: object; increase:() => void; decrease:() => void}) => (\n  <div className=\"z-40 fixed w-full h-full inset-0 bg-dark-grey\">\n    <X />\n    <div className=\"z-40 fixed mx-auto md:w-768 inset-0\">\n      <OutsideClickHandler onOutsideClick={() => { obj.setShowBlog2(false) }}>\n        <>\n        <BlogPost2Big \n          title2={obj.title2}\n          text2={obj.text2}\n          time2={obj.time2}\n          day2={obj.day2}\n          date2={obj.date2}\n          handlers={obj.handlers}\n        /> \n        <FileNav\n          show={obj.showBlog2} \n          setShow={obj.setShowBlog2} \n          increase={obj.increase}\n          decrease={obj.decrease}\n        />\n        </>\n      </OutsideClickHandler>\n    </div>\n  </div>\n)\n\nconst BlogPostBig = (obj: {title:string; text:string; time:string; day:string; date:number; handlers:object}) => (\n  <div className=\"h-[calc(100%-70px)] fixed overflow-y-scroll w-full md:w-768 bg-white scrollbar-hide pt-50px pb-10px px-45px md:mx-auto lg:scrollbar-default\" {...obj.handlers}>\n    <h6 className=\"flex text-dark-grey font-bold uppercase font-mono mb-3\">\n      {obj.title}\n    </h6>\n    <p className=\"whitespace-pre-line break-words leading-5\">\n      {obj.text}\n    </p>\n    <div className=\"flex flex-col text-dark-grey text-sm text-left font-mono mt-3 items-end\">\n      <h6 className=\"uppercase\">\n        {obj.time}&nbsp;{obj.day}\n      </h6>\n      <h6 className=\"uppercase\">\n        {obj.date}\n      </h6>\n    </div>\n  </div>\n)\n\nconst BlogPost2Big = (obj: {title2:string; text2:string; time2:string; day2:string; date2:number; handlers:object}) => (\n  <div className=\"h-[calc(100%-70px)] fixed overflow-y-scroll w-full md:w-768 bg-white scrollbar-hide pt-50px pb-10px px-45px md:mx-auto lg:scrollbar-default\" {...obj.handlers}>\n    <h6 className=\"flex text-dark-grey font-bold uppercase font-mono mb-3\">\n      {obj.title2}\n    </h6>\n    <p className=\"whitespace-pre-line break-words leading-5\">\n      {obj.text2}\n    </p>\n    <div className=\"flex flex-col text-dark-grey text-sm text-left font-mono mt-3 items-end\">\n      <h6 className=\"uppercase\">\n        {obj.time2}&nbsp;{obj.day2}\n      </h6>\n      <h6 className=\"uppercase\">\n        {obj.date2}\n      </h6>\n    </div>\n  </div>\n);\n\nexport default Blog;\n","/home/roqa/Documents/Git/portfolio/src/pages/Home/Footer/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/Home/Projects/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/components/Buttons/Nav.tsx",[],[],{"ruleId":"54","severity":1,"message":"55","line":88,"column":7,"nodeType":"56","endLine":88,"endColumn":128},{"ruleId":"54","severity":1,"message":"55","line":89,"column":7,"nodeType":"56","endLine":89,"endColumn":99},{"ruleId":"54","severity":1,"message":"55","line":90,"column":7,"nodeType":"56","endLine":90,"endColumn":93},{"ruleId":"54","severity":1,"message":"55","line":92,"column":5,"nodeType":"56","endLine":92,"endColumn":130},{"ruleId":"57","severity":1,"message":"58","line":34,"column":13,"nodeType":"59","messageId":"60","endLine":34,"endColumn":17},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]