[{"/home/roqa/Documents/Git/portfolio/src/index.tsx":"1","/home/roqa/Documents/Git/portfolio/src/App.tsx":"2","/home/roqa/Documents/Git/portfolio/src/components/Header/index.tsx":"3","/home/roqa/Documents/Git/portfolio/src/components/NavMobile/index.tsx":"4","/home/roqa/Documents/Git/portfolio/src/pages/Home/index.tsx":"5","/home/roqa/Documents/Git/portfolio/src/pages/404/index.tsx":"6","/home/roqa/Documents/Git/portfolio/src/components/Blog/index.tsx":"7","/home/roqa/Documents/Git/portfolio/src/components/Projects/index.tsx":"8","/home/roqa/Documents/Git/portfolio/src/components/Nav/index.tsx":"9","/home/roqa/Documents/Git/portfolio/src/components/Social/index.tsx":"10"},{"size":274,"mtime":1654867343932,"results":"11","hashOfConfig":"12"},{"size":372,"mtime":1654858560480,"results":"13","hashOfConfig":"12"},{"size":932,"mtime":1655303629727,"results":"14","hashOfConfig":"12"},{"size":793,"mtime":1655290055620,"results":"15","hashOfConfig":"12"},{"size":1608,"mtime":1655307252186,"results":"16","hashOfConfig":"12"},{"size":356,"mtime":1655057464417,"results":"17","hashOfConfig":"12"},{"size":6651,"mtime":1655321848826,"results":"18","hashOfConfig":"12"},{"size":4630,"mtime":1655204305231,"results":"19","hashOfConfig":"12"},{"size":755,"mtime":1654888161967,"results":"20","hashOfConfig":"12"},{"size":1177,"mtime":1655298930622,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"5z7n78",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"25"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"25"},"/home/roqa/Documents/Git/portfolio/src/index.tsx",[],[],[],"/home/roqa/Documents/Git/portfolio/src/App.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/components/Header/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/components/NavMobile/index.tsx",["57","58","59","60","61","62","63"],[],"const NavMobile = () => {\n  return (\n    <nav className=\"flex flex-row container justify-end justify-between md:hidden\">\n      <div className=\"flex flex-row items-center gap-x-2\">\n        <a className=\"bg-github-icon bg-no-repeat bg-46 bg-center h-10 w-10\" href=\"https://github.com/paq000\" target=\"_blank\" rel=\"noreferrer\" />\n        <a className=\"bg-linkedin-icon bg-no-repeat bg-46 bg-center h-10 w-10\" href=\"\" />\n        <a className=\"bg-whatsapp-icon bg-no-repeat bg-46 bg-center h-10 w-10\"  href=\"\" />\n        <a className=\"bg-email-icon bg-no-repeat bg-46 bg-center h-10 w-10\" href=\"#contact\" />\n      </div>\n      <a className=\"bg-download-icon bg-no-repeat bg-46 bg-center w-12 h-12 shrink-0 ml-4 gold-filter\" href=\"resume.pdf\" download />\n    </nav>\n  );\n};\n\nexport default NavMobile;","/home/roqa/Documents/Git/portfolio/src/pages/Home/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/404/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/components/Blog/index.tsx",["64"],[],"import axios from 'axios';\nimport { FC, useState, useEffect } from 'react';\nimport { useSwipeable } from \"react-swipeable\";\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\ninterface BlogProps {\n  heading: string;\n}\n\nconst Blog: FC<BlogProps> = ({heading}) => {\n  const [show, setShow] = useState(false);\n  const [title, setTitle] = useState([]);\n  const [text, setText] = useState([]);\n  const [time, setTime] = useState([]);\n  const [day, setDay] = useState([]);\n  const [date, setDate] = useState([]);\n  const [counter, setCounter] = useState(0);\n  const [ids, setIDS] = useState(0);\n  const URL:string = \"https://portfolio-blog-posts.herokuapp.com/posts/\";\n  const URL0:string = URL + 0;\n\n  // get total number of posts\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await axios.get(URL)\n        .then(res => {\n          const ids = res.data.length;\n          setIDS(ids);\n        })\n    }\n    fetchData()\n      .catch(console.error);\n  }, [ids])\n\n  // get first blog post\n  useEffect(() => {\n    axios.get(URL0)\n      .then((response:any) => {\n        setTitle(response.data.title);\n        setText(response.data.text);\n        setTime(response.data.time);\n        setDay(response.data.day);\n        setDate(response.data.date);\n      })\n  }, [URL0])\n\n  // next blog post\n  const increase = async() => {\n    if (counter < (ids - 1)) {\n      setCounter(counter => counter + 1);\n      await axios.get(URL + (counter + 1))\n        .then((response:any) => {\n          setTitle(response.data.title);\n          setText(response.data.text);\n          setTime(response.data.time);\n          setDay(response.data.day);\n          setDate(response.data.date);\n        })\n    } else if (counter === (ids - 1)) {\n      setCounter(counter => counter = 0);\n      await axios.get(URL0)\n        .then((response:any) => {\n          setTitle(response.data.title);\n          setText(response.data.text);\n          setTime(response.data.time);\n          setDay(response.data.day);\n          setDate(response.data.date);\n        })\n    }\n  };\n \n  // previous blog post\n  const decrease = async() => {\n    if (counter === 0) {\n      setCounter(counter => counter = (ids - 1))\n      await axios.get(URL + (counter + (ids - 1)))\n        .then((response:any) => {\n          setTitle(response.data.title);\n          setText(response.data.text);\n          setTime(response.data.time);\n          setDay(response.data.day);\n          setDate(response.data.date);\n        })\n    } else if (counter > 0) {\n        setCounter(counter => counter - 1);\n        await axios.get(URL + (counter - 1))\n          .then((response:any) => {\n            setTitle(response.data.title);\n            setText(response.data.text);\n            setTime(response.data.time);\n            setDay(response.data.day);\n            setDate(response.data.date);\n          })\n    }\n  };\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => decrease(),\n    onSwipedRight: () => increase()\n  });\n\n  return (\n    <>\n      <h2 id=\"blog\" className=\"flex font-mono text-forest-green leading-10 text-2xl uppercase\">\n        {heading}\n      </h2>\n      <section className=\"flex flex-col w-auto justify-center\">\n        <UpArrow />\n        <button onClick={() => setShow(!show)}>\n          <>\n            <div className=\"flex flex-col font-mono bg-white w-full h-52 pt-6 px-7 pb-4 rounded-xl relative justify-between\">\n              <h6 className=\"flex text-dark-grey font-bold uppercase font-mono\">\n                {title}\n              </h6>\n              <p className=\"line-clamp-4 text-left\">\n                {text}\n              </p>\n              <h6 className=\"flex text-dark-grey text-sm font-mono self-end justify-end uppercase\">\n                {time}&nbsp;{day}&nbsp;{date}\n              </h6>\n            </div>\n            { show ? disableBodyScroll(Document as any) : enableBodyScroll(Document as any) } \n          </>\n        </button>\n        <span className=\"blog-post-triangle\" />\n        { show ? \n          <div className=\"blog-post\">\n            <BlogPost \n              title={title} \n              time={time}\n              text={text}\n              day={day}\n              date={date}\n              {...handlers}\n            /> \n            <BlogButtons\n              show={show} \n              setShow={setShow} \n              increase={increase}\n              decrease={decrease}\n            />\n          </div>\n        : null }\n        <DownArrow />\n        <div className=\"bg-blog-pic flex bg-no-repeat bg-cover bg-center w-full h-80 px-3\" />\n      </section>\n    </>\n  );\n};\n\nconst BlogPost = ({title, text, time, day, date}:any) => (\n  <div className=\"blog-post-text scrollbar-hide\">\n    <h6 className=\"flex text-dark-grey font-bold uppercase font-mono mb-3\">\n      {title}\n    </h6>\n    <p className=\"whitespace-pre-line break-words leading-5\">\n      {text}\n    </p>\n    <div className=\"flex flex-col text-dark-grey text-sm text-left font-mono mt-3 items-end\">\n      <h6 className=\"uppercase\">\n        {time}&nbsp;{day}\n      </h6>\n      <h6 className=\"uppercase\">\n        {date}\n      </h6>\n    </div>\n  </div>\n)\n\nconst BlogButtons = ({setShow, show, increase, decrease}:any) => (\n  <div className=\"blog-post-buttons flex flex-row items-center justify-evenly\">\n    <LeftArrow \n      decrease={decrease}\n    />\n    <Close\n      show={show}\n      setShow={setShow}\n    />\n    <RightArrow \n      increase={increase}\n    />\n  </div>\n)\n\nconst UpArrow = () => (\n  <div className=\"flex flex-row w-auto m-3 justify-end\">\n    <div className=\"arrow-icon\">\n      <span className=\"arrow\" />\n    </div>\n  </div>\n)\n\nconst DownArrow = () => (\n  <div className=\"flex flex-row w-auto m-3 justify-end\">\n    <div className=\"arrow-icon rotate-180\">\n      <span className=\"arrow\" />\n    </div>\n  </div>\n)\n\nconst LeftArrow = ({decrease}:any) => (\n  <button className=\"h-12 w-12\" onClick={decrease} title=\"Previous\">\n    <div className=\"flex scale-50 items-center justify-center\">\n      <div className=\"arrow-icon rotate-270\">\n        <span className=\"arrow\" />\n      </div>\n    </div>\n  </button>\n)\n\nconst RightArrow = ({increase}:any) => (\n  <button className=\"h-12 w-12\" onClick={increase} title=\"Next\">\n    <div className=\"flex scale-50 items-center justify-center\">\n      <div className=\"arrow-icon rotate-90\">\n        <span className=\"arrow\" />\n      </div>\n    </div>\n  </button>\n)\n\nconst Close = ({setShow, show}:any) => (\n  <button className=\"h-12 w-12\" onClick={() => setShow(!show)} title=\"Close\">\n    <div className=\"flex scale-75 justify-center items-center\">\n      <div className=\"x\" />\n    </div>\n  </button>\n)\n\nexport default Blog;","/home/roqa/Documents/Git/portfolio/src/components/Projects/index.tsx",["65","66"],[],"import { FC, useState } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\ninterface ProjectProps {\n\n  project2: string;\n}\n\ninterface Props {\n  show: any;\n  setShow: any;\n}\n\nconst Projects: FC<ProjectProps> = ({ project2 }) => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <>\n      <h2 id=\"projects\" className=\"flex font-mono text-forest-green text-2xl uppercase\">\n        Projects\n      </h2>\n      <Key />\n      <section className=\"flex container my-8 justify-center\">\n        <section className=\"grid grid-rows-auto gap-y-12\">\n          <section className=\"project-container\">\n              <div className=\"project-icons flex flex-row justify-center gap-x-4 items-center\">\n                <Triangle />\n                <Circle />\n                <Square />\n              </div>\n              <button onClick={() => setShow(!show)}>\n                <>\n                  <Test />\n                  { show ? disableBodyScroll(Document as any) : enableBodyScroll(Document as any) }\n                </>\n              </button>\n              { show ? <Mobile setShow={setShow} show={show} /> : null }\n          </section>\n          <section className=\"project-container\">\n              <div className=\"project-icons flex flex-row justify-center gap-x-4 items-center\">\n                <Triangle />\n                <Circle />\n                <Square />\n              </div>\n              <div className=\"project\">\n                <span className=\"bg-google-logo bg-no-repeat bg-contain bg-center w-60 h-20 flex\" />\n              </div>\n              <div className=\"project-title-bar\">\n                <h4 className=\"text-grey text-xl font-mono select-none\">{project2}</h4>\n              </div>\n          </section>\n        </section>\n      </section>\n    </>\n  );\n};\n\nconst Test = () => (\n  <>\n    <div className=\"project\">\n      <span className=\"bg-google-logo bg-no-repeat bg-contain bg-center w-60 h-20 flex\" />\n    </div>\n    <div className=\"project-title-bar\">\n      <h4 className=\"text-grey text-xl font-mono select-none\">Google Frontend</h4>\n    </div>\n  </>\n)\n\nconst Mobile: FC<Props> = ({setShow, show}) => (\n  <section className=\"project-mobile scrollbar-hide\">\n    <div className=\"project-mobile-top flex flex-col justify-evenly\">\n      <button className=\"x\" onClick={() => setShow(!show)} />\n      <span className=\"bg-google-logo my-9 bg-no-repeat bg-contain bg-center w-60 h-20 flex self-center justify-self-center\" />\n      <div className=\"flex flex-row flex-wrap gap-4 justify-evenly text-white\">\n        <a className=\"whitespace-nowrap\" href=\"\">see the full project</a>\n        <a className=\"whitespace-nowrap\" href=\"\">view code</a>\n      </div>\n    </div>\n\n    <div className=\"project-mobile-bottom flex flex-col\">\n      <h1 className=\"text-dark-grey text-3xl font-mono uppercase\">Google Frontend</h1>\n      <h3 className=\"my-3 text-forest-green text-2xl font-mono\">Description</h3>\n      <p className=\"font-mono text-black leading-5\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique voluptates in ad, excepturi esse debitis quos perferendis, inventore repudiandae dolorem placeat asperiores assumenda accusamus molestias veritatis beatae facilis molestiae ab.</p>\n      <h3 className=\"my-3 text-forest-green text-2xl font-mono\">Tech used</h3>\n      <ul className=\"grid grid-cols-2 auto-cols-fr gap-x-7 list-disc list-inside\">\n        <li>Typescript</li>\n        <li>ReactJS</li>\n        <li>Tailwind CSS</li>\n        <li>React Router</li>\n        <li>Typescript</li>\n        <li>Typescript</li>\n      </ul>\n      <div className=\"flex flex-row justify-end mt-6 gap-x-3\">\n        <Triangle />\n        <Circle />\n        <Square />\n      </div>\n    </div>\n  </section>\n)\n\nconst Key = () => (\n  <section className=\"flex flex-row w-auto justify-end pr-6\">\n    <section className=\"flex flex-col\">\n      <div className=\"flex flex-row mb-1 items-center\">\n        <Triangle />\n        <span className=\"flex font-mono text-blue pl-4\">\n          CSS\n        </span>\n      </div>\n      <div className=\"flex flex-row my-1 items-center\">\n        <Circle />\n        <span className=\"flex font-mono text-red pl-4\">\n          React\n        </span>\n      </div>\n      <div className=\"flex flex-row my-1 items-center\">\n        <Square />\n        <span className=\"flex font-mono text-gold pl-4\">\n          JavaScript\n        </span>\n      </div>\n    </section>\n  </section>\n)\n\nconst Triangle = () => <span className=\"flex triangle\"/>;\nconst Circle = () => <span className=\"flex circle\"/>;\nconst Square = () => <span className=\"flex square\"/>;\n\nexport default Projects;","/home/roqa/Documents/Git/portfolio/src/components/Nav/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/components/Social/index.tsx",["67","68","69","70"],[],"const SocialButtons = () => {\n  return (\n    <div className=\"hidden flex-row w-min gap-x-6 flex-start md:flex md:my-10\">\n      <a href=\"\">\n        <div className=\"flex items-center justify-center rounded-full border-2 bg-transparent border-white w-14 h-14\">\n          <div className=\"flex bg-github-icon bg-no-repeat bg-46 bg-center h-10 w-10\"/>\n        </div>\n      </a>\n      <a href=\"\">\n        <div className=\"flex items-center justify-center rounded-full border-2 bg-transparent border-white w-14 h-14\">\n          <div className=\"flex bg-linkedin-icon bg-no-repeat bg-46 bg-center h-10 w-10\"/>\n        </div>\n      </a>\n      <a href=\"\">\n        <div className=\"flex items-center justify-center rounded-full border-2 bg-transparent border-white w-14 h-14\">\n          <div className=\"flex bg-whatsapp-icon bg-no-repeat bg-46 bg-center h-10 w-10\"/>\n        </div>\n      </a>\n      <a href=\"\">\n        <div className=\"flex items-center justify-center rounded-full border-2 bg-transparent border-white w-14 h-14\">\n          <div className=\"flex bg-email-icon bg-no-repeat bg-46 bg-center h-10 w-10\"/>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default SocialButtons;",{"ruleId":"71","severity":1,"message":"72","line":5,"column":9,"nodeType":"73","endLine":5,"endColumn":146},{"ruleId":"71","severity":1,"message":"72","line":6,"column":9,"nodeType":"73","endLine":6,"endColumn":90},{"ruleId":"74","severity":1,"message":"75","line":6,"column":9,"nodeType":"73","endLine":6,"endColumn":90},{"ruleId":"71","severity":1,"message":"72","line":7,"column":9,"nodeType":"73","endLine":7,"endColumn":91},{"ruleId":"74","severity":1,"message":"75","line":7,"column":9,"nodeType":"73","endLine":7,"endColumn":91},{"ruleId":"71","severity":1,"message":"72","line":8,"column":9,"nodeType":"73","endLine":8,"endColumn":95},{"ruleId":"71","severity":1,"message":"72","line":10,"column":7,"nodeType":"73","endLine":10,"endColumn":133},{"ruleId":"76","severity":1,"message":"77","line":25,"column":13,"nodeType":"78","messageId":"79","endLine":25,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":75,"column":9,"nodeType":"73","endLine":75,"endColumn":50},{"ruleId":"74","severity":1,"message":"75","line":76,"column":9,"nodeType":"73","endLine":76,"endColumn":50},{"ruleId":"74","severity":1,"message":"75","line":4,"column":7,"nodeType":"73","endLine":4,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":9,"column":7,"nodeType":"73","endLine":9,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":14,"column":7,"nodeType":"73","endLine":14,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":19,"column":7,"nodeType":"73","endLine":19,"endColumn":18},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]