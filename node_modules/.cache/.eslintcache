[{"/home/roqa/Documents/Git/portfolio/src/index.tsx":"1","/home/roqa/Documents/Git/portfolio/src/App.tsx":"2","/home/roqa/Documents/Git/portfolio/src/components/Header/index.tsx":"3","/home/roqa/Documents/Git/portfolio/src/components/NavMobile/index.tsx":"4","/home/roqa/Documents/Git/portfolio/src/pages/Home/index.tsx":"5","/home/roqa/Documents/Git/portfolio/src/pages/404/index.tsx":"6","/home/roqa/Documents/Git/portfolio/src/components/Blog/index.tsx":"7","/home/roqa/Documents/Git/portfolio/src/components/Projects/index.tsx":"8","/home/roqa/Documents/Git/portfolio/src/components/Nav/index.tsx":"9","/home/roqa/Documents/Git/portfolio/src/components/Social/index.tsx":"10"},{"size":274,"mtime":1654867343932,"results":"11","hashOfConfig":"12"},{"size":372,"mtime":1654858560480,"results":"13","hashOfConfig":"12"},{"size":955,"mtime":1654886320820,"results":"14","hashOfConfig":"12"},{"size":679,"mtime":1655128151509,"results":"15","hashOfConfig":"12"},{"size":1673,"mtime":1654890655580,"results":"16","hashOfConfig":"12"},{"size":356,"mtime":1655057464417,"results":"17","hashOfConfig":"12"},{"size":1626,"mtime":1655147238429,"results":"18","hashOfConfig":"12"},{"size":4579,"mtime":1655146390530,"results":"19","hashOfConfig":"12"},{"size":755,"mtime":1654888161967,"results":"20","hashOfConfig":"12"},{"size":369,"mtime":1654802752643,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"5z7n78",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/home/roqa/Documents/Git/portfolio/src/index.tsx",[],[],[],"/home/roqa/Documents/Git/portfolio/src/App.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/components/Header/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/components/NavMobile/index.tsx",["56","57","58","59","60","61","62"],[],"const NavMobile = () => {\n  return (\n    <nav className=\"flex flex-row container justify-end justify-between md:hidden\">\n      <div className=\"flex flex-row items-center\">\n        <a className=\"bg-github-icon nav-icons\" href=\"https://github.com/paq000\" target=\"_blank\" rel=\"noreferrer\" />\n        <a className=\"bg-linkedin-icon nav-icons\" href=\"\" />\n        <a className=\"bg-whatsapp-icon nav-icons\"  href=\"\" />\n        <a className=\"bg-email-icon mail-icon white-filter\" href=\"#contact\" />\n\n      </div>\n      <a className=\"bg-download-icon bg-no-repeat bg-contain bg-center w-14 h-14 gold-filter px-3\" href=\"resume.pdf\" download />\n    </nav>\n  );\n};\n\nexport default NavMobile;","/home/roqa/Documents/Git/portfolio/src/pages/Home/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/404/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/components/Blog/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/components/Projects/index.tsx",["63","64"],[],"import { FC, useState } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\ninterface ProjectProps {\n\n  project2: string;\n}\n\ninterface Props {\n  show: any;\n  setShow: any;\n}\n\nconst Projects: FC<ProjectProps> = ({ project2 }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <h2 id=\"projects\" className=\"flex font-mono text-forest-green text-2xl uppercase\">\n        Projects\n      </h2>\n      <Key />\n      <section className=\"flex container my-8 justify-center\">\n        <section className=\"grid grid-rows-auto gap-y-12\">\n          <section className=\"project-container\">\n              <div className=\"project-icons\">\n                <Triangle />\n                <Circle />\n                <Square />\n              </div>\n              <button onClick={() => setShow(!show)}>\n                <>\n                  <Test />\n                  { show ? disableBodyScroll(Document as any) : enableBodyScroll(Document as any) }\n                </>\n              </button>\n              { show ? \n                <>\n\n                <Mobile setShow={setShow} show={show} />\n                </>\n              : null }\n          </section>\n          <section className=\"project-container\">\n              <div className=\"project-icons\">\n                <Triangle />\n                <Circle />\n                <Square />\n              </div>\n              <div className=\"project\">\n                <span className=\"bg-google-logo bg-no-repeat bg-contain bg-center w-60 h-20 flex\" />\n              </div>\n              <div className=\"project-title-bar\">\n                <h4 className=\"text-grey text-lg font-mono select-none\">{project2}</h4>\n              </div>\n          </section>\n        </section>\n      </section>\n    </>\n  );\n};\n\nconst Test = () => (\n  <>\n    <div className=\"project\">\n      <span className=\"bg-google-logo bg-no-repeat bg-contain bg-center w-60 h-20 flex\" />\n    </div>\n    <div className=\"project-title-bar\">\n      <h4 className=\"text-grey text-lg font-mono select-none\">Google Frontend</h4>\n    </div>\n  </>\n)\n\nconst Mobile: FC<Props> = ({setShow, show}) => (\n  <>\n    <div className=\"project-mobile\">\n\n      <div className=\"project-mobile-top flex flex-col justify-evenly\">\n        <button className=\"x\" onClick={() => setShow(!show)} />\n        <span />\n        <span className=\"bg-google-logo my-9 bg-no-repeat bg-contain bg-center w-60 h-20 flex self-center justify-self-center\" />\n        <div className=\"flex flex-row justify-evenly text-white\">\n          <a href=\"\">see the full project</a>\n          <a href=\"\">view code</a>\n        </div>\n      </div>\n\n      <div className=\"project-mobile-bottom flex flex-col\">\n        <h1 className=\"text-dark-grey text-3xl font-mono uppercase\">Google Frontend</h1>\n        <h3 className=\"my-3 text-forest-green text-2xl font-mono\">Description</h3>\n        <p className=\"font-mono text-black\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique voluptates in ad, excepturi esse debitis quos perferendis, inventore repudiandae dolorem placeat asperiores assumenda accusamus molestias veritatis beatae facilis molestiae ab.</p>\n        <h3 className=\"my-3 text-forest-green text-2xl font-mono\">Tech used</h3>\n        <ul className=\"grid grid-cols-2 auto-cols-fr gap-x-7 list-disc list-inside\">\n          <li>Typescript</li>\n          <li>ReactJS</li>\n          <li>Tailwind CSS</li>\n          <li>React Router</li>\n          <li>Typescript</li>\n          <li>Typescript</li>\n        </ul>\n        <div className=\"flex flex-row justify-end mt-3 gap-x-3\">\n          <Triangle />\n          <Circle />\n          <Square />\n        </div>\n      </div>\n\n    </div>\n  </>\n)\n\nconst Key = () => (\n  <section className=\"flex flex-row w-auto justify-end pr-6\">\n    <section className=\"flex flex-col\">\n      <div className=\"flex flex-row mb-2 items-center\">\n        <Triangle />\n        <span className=\"flex font-mono text-blue pl-4\">\n          CSS\n        </span>\n      </div>\n      <div className=\"flex flex-row my-2 items-center\">\n        <Circle />\n        <span className=\"flex font-mono text-red pl-4\">\n          React\n        </span>\n      </div>\n      <div className=\"flex flex-row my-2 items-center\">\n        <Square />\n        <span className=\"flex font-mono text-gold pl-4\">\n          JavaScript\n        </span>\n      </div>\n    </section>\n  </section>\n)\n\nconst Triangle = () => <span className=\"flex triangle\"/>;\nconst Circle = () => <span className=\"flex circle\"/>;\nconst Square = () => <span className=\"flex square\"/>;\n\nexport default Projects;",[],"/home/roqa/Documents/Git/portfolio/src/components/Nav/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/components/Social/index.tsx",[],[],{"ruleId":"65","severity":1,"message":"66","line":5,"column":9,"nodeType":"67","endLine":5,"endColumn":117},{"ruleId":"65","severity":1,"message":"66","line":6,"column":9,"nodeType":"67","endLine":6,"endColumn":61},{"ruleId":"68","severity":1,"message":"69","line":6,"column":9,"nodeType":"67","endLine":6,"endColumn":61},{"ruleId":"65","severity":1,"message":"66","line":7,"column":9,"nodeType":"67","endLine":7,"endColumn":62},{"ruleId":"68","severity":1,"message":"69","line":7,"column":9,"nodeType":"67","endLine":7,"endColumn":62},{"ruleId":"65","severity":1,"message":"66","line":8,"column":9,"nodeType":"67","endLine":8,"endColumn":79},{"ruleId":"65","severity":1,"message":"66","line":11,"column":7,"nodeType":"67","endLine":11,"endColumn":129},{"ruleId":"68","severity":1,"message":"69","line":82,"column":11,"nodeType":"67","endLine":82,"endColumn":22},{"ruleId":"68","severity":1,"message":"69","line":83,"column":11,"nodeType":"67","endLine":83,"endColumn":22},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]