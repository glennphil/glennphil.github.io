[{"/home/roqa/Documents/Git/portfolio/src/index.tsx":"1","/home/roqa/Documents/Git/portfolio/src/App.tsx":"2","/home/roqa/Documents/Git/portfolio/src/pages/Home/index.tsx":"3","/home/roqa/Documents/Git/portfolio/src/pages/404/index.tsx":"4","/home/roqa/Documents/Git/portfolio/src/pages/Home/Header/index.tsx":"5","/home/roqa/Documents/Git/portfolio/src/pages/Home/Blog/index.tsx":"6","/home/roqa/Documents/Git/portfolio/src/pages/Home/Footer/index.tsx":"7","/home/roqa/Documents/Git/portfolio/src/pages/Home/Projects/index.tsx":"8"},{"size":274,"mtime":1656605818136,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1656605818136,"results":"11","hashOfConfig":"10"},{"size":347,"mtime":1656605818136,"results":"12","hashOfConfig":"10"},{"size":981,"mtime":1656605818136,"results":"13","hashOfConfig":"10"},{"size":4206,"mtime":1656759841536,"results":"14","hashOfConfig":"10"},{"size":15433,"mtime":1656797852589,"results":"15","hashOfConfig":"10"},{"size":530,"mtime":1656605818136,"results":"16","hashOfConfig":"10"},{"size":17465,"mtime":1656789913776,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1jsjig8",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"21"},"/home/roqa/Documents/Git/portfolio/src/index.tsx",[],[],[],"/home/roqa/Documents/Git/portfolio/src/App.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/Home/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/404/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/Home/Header/index.tsx",["45","46","47","48"],[],"import { FC } from 'react';\n\ninterface HeadingProps {\n  heading: string;\n}\n\nconst Header = () => {\n  return (\n    <header className=\"flex flex-col mx-auto container overflow-fix justify-between heightfix\">\n      <NavBar/>\n      <div className=\"xl:flex flex-row container mx-auto justify-center xl:mt-12\">\n        <div className=\"flex flex-col\">\n          <Heading \n            heading={`Hi, I'm Glenn Phillips! \\n`} \n          />\n          <div className=\"flex flex-col h-full w-full container\">\n            <div className=\"md:flex flex-row w-full container\">\n              <div className=\"flex flex-col justify-start w-full container\">\n                <SubHeading/>\n                <SocialButtons/>\n              </div>\n              <Profile/>\n            </div>\n          </div>\n        </div>\n        <ProfileXL/>\n      </div>\n    </header>\n  )\n}\n\nconst NavBar = () => (\n  <section className=\"flex justify-end\">\n    <NavMobile/>\n    <Navigation/>\n  </section>\n);\n\nconst Navigation = () => (\n  <nav className=\"flex-row container justify-between px-5 text-sm max-w-lg hidden md:flex\">\n    <a className=\"text-gold link-underline-gold\" href=\"resume.pdf\" download>\n      download my resume\n    </a>\n    <a className=\"text-forest-green link-underline\" href=\"#projects\">\n      portfolio\n    </a>\n    <a className=\"text-forest-green link-underline\" href=\"#blog\">\n      blog\n    </a>\n    <a className=\"text-forest-green link-underline\" href=\"#contact\">\n      contact\n    </a>\n  </nav>\n);\n\nconst NavMobile = () => (\n  <nav className=\"flex flex-row container justify-end justify-between md:hidden\">\n    <div className=\"flex flex-row items-center gap-x-2\">\n      <a className=\"bg-github-icon bg-no-repeat bg-46 bg-center h-10 w-10\" href=\"https://github.com/paq000\" target=\"_blank\" rel=\"noreferrer\" />\n      <a className=\"bg-linkedin-icon bg-no-repeat bg-46 bg-center h-10 w-10\" href=\"https://www.linkedin.com/in/glenn-p/\" />\n      <a className=\"bg-email-icon bg-no-repeat bg-46 bg-center h-10 w-10\" href=\"#contact\" />\n    </div>\n    <a className=\"bg-download-icon bg-no-repeat bg-46 bg-center w-12 h-12 shrink-0 ml-4 gold-filter\" href=\"resume.pdf\" download />\n  </nav>\n);\n\nconst SocialButtons = () => (\n  <div className=\"hidden flex-row w-min gap-x-6 flex-start md:flex md:my-10\">\n    <a href=\"https://github.com/paq000\">\n      <div className=\"flex items-center justify-center rounded-full border-2 bg-transparent border-white w-11 h-11\">\n        <div className=\"flex bg-github-icon bg-no-repeat bg-46 bg-center h-8 w-8\"/>\n      </div>\n    </a>\n    <a href=\"https://www.linkedin.com/in/glenn-p/\">\n      <div className=\"flex items-center justify-center rounded-full border-2 bg-transparent border-white w-11 h-11\">\n        <div className=\"flex bg-linkedin-icon bg-no-repeat bg-46 bg-center h-8 w-8\"/>\n      </div>\n    </a>\n    <a href=\"#contact\">\n      <div className=\"flex items-center justify-center rounded-full border-2 bg-transparent border-white w-11 h-11\">\n        <div className=\"flex bg-email-icon bg-no-repeat bg-46 bg-center h-8 w-8\"/>\n      </div>\n    </a>\n  </div>\n);\n\nconst Heading: FC<HeadingProps> = ({heading}) => (\n  <div className=\"flex flex-col flex-start my-5 md:mt-10\">\n    <h1 className=\"text-white font-sans text-5xl display-linebreak uppercase\">{heading}</h1>\n  </div>\n);\n\nconst SubHeading = () => (\n  <h3 className=\"flex flex-start text-light-grey font-normal font-mono leading-6 text-2xl display-linebreak\">\n    <div className=\"xl:hidden\">\n      {`I'm a front-end developer \\n from the US.`}\n    </div>\n    <div className=\"hidden xl:flex\">\n      {`I'm a front-end developer from the US.`}\n    </div>\n  </h3>\n);\n\nconst Profile = () => (\n  <div className=\"flex flex-row justify-end mt-4 xl:hidden\">\n    <div className=\"bg-[url('https://glennphil.github.io/assets/profile.png')] bg-no-repeat bg-center bg-[length:320px_414px] w-320 h-414 md:bg-[length:388px_498px] md:w-388 md:h-498 xl:hidden\" />\n  </div>\n);\n\nconst ProfileXL = () => (\n  <div className=\"hidden xl:flex flex-row justify-end mt-16\">\n    <div className=\"hidden xl:flex bg-[url('https://glennphil.github.io/assets/profile.png')] bg-no-repeat bg-center bg-[length:430px_552px] w-430 h-552\" />\n  </div>\n);\n\nexport default Header;\n","/home/roqa/Documents/Git/portfolio/src/pages/Home/Blog/index.tsx",["49","50"],[],"/home/roqa/Documents/Git/portfolio/src/pages/Home/Footer/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/Home/Projects/index.tsx",["51"],[],"import OutsideClickHandler from 'react-outside-click-handler';\nimport { FC, useState } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\ninterface Project1Props {\n  title: string;\n  showProject1: boolean;\n  setShowProject1: any;\n}\ninterface Project2Props {\n  title: string;\n  showProject2: boolean;\n  setShowProject2: any;\n}\ninterface Project3Props {\n  title: string;\n  showProject3: boolean;\n  setShowProject3: any;\n}\ninterface ProjectProps {\n  description: string;\n  viewProject: string;\n  viewCode: string;\n  tech: string;\n}\n\nconst Projects = () => {\n  const [showProject1, setShowProject1] = useState<boolean>(false);\n  const [showProject2, setShowProject2] = useState<boolean>(false);\n  const [showProject3, setShowProject3] = useState<boolean>(false);\n  const description = \"Description\";\n  const viewProject = \"see the full project\";\n  const viewCode = \"view code\";\n  const tech = \"Tech used\";\n\n  return (\n    <section className=\"flex flex-col container mt-28 gap-4\">\n      <div className=\"xl:flex flex-row justify-between items-center content-center xl:mb-12 xl:mt-20\">\n        <h2 id=\"projects\" className=\"flex font-mono text-forest-green text-2xl leading-6 uppercase self-end\">\n          Projects\n        </h2>\n        <Key />\n      </div>\n      <section className=\"flex flex-wrap container justify-center md:grid md:grid-cols-2 lg:grid-cols-3 md:auto-rows-fr gap-y-20 gap-x-[50px] md:gap-x-[110px] lg:gap-x-[46px] xl:gap-x-[124px] z-40\">\n        <Project1\n          title={`Google Frontend`}\n          showProject1={showProject1}\n          setShowProject1={setShowProject1}\n          description={description}\n          viewProject={viewProject}\n          viewCode={viewCode}\n          tech={tech}\n        />\n        <Project2\n          title={`Portfolio`}\n          showProject2={showProject2}\n          setShowProject2={setShowProject2}\n          description={description}\n          viewProject={viewProject}\n          viewCode={viewCode}\n          tech={tech}\n        />\n        <Project3\n          title={`Coffee Shop`}\n          showProject3={showProject3}\n          setShowProject3={setShowProject3}\n          description={description}\n          viewProject={viewProject}\n          viewCode={viewCode}\n          tech={tech}\n        />\n      </section>\n    </section>\n  );\n};\n\nconst Key = () => (\n  <section className=\"flex flex-row w-auto justify-end mb-4 xl:mb-0\">\n    <section className=\"flex flex-col xl:flex-row gap-x-12\">\n      <div className=\"flex flex-row my-1 items-center\">\n        <Triangle />\n        <span className=\"flex font-mono text-red pl-4\">\n          CSS\n        </span>\n      </div>\n      <div className=\"flex flex-row my-1 items-center\">\n        <Circle />\n        <span className=\"flex font-mono text-blue pl-4\">\n          ReactJS\n        </span>\n      </div>\n      <div className=\"flex flex-row my-1 items-center\">\n        <Square />\n        <span className=\"flex font-mono text-gold pl-4\">\n          JavaScript\n        </span>\n      </div>\n      <div className=\"flex flex-row my-1 items-center\">\n        <Diamond />\n        <span className=\"flex font-mono text-light-green pl-4\">\n          Typescript\n        </span>\n      </div>\n      <div className=\"flex flex-row my-1 items-center\">\n        <Star />\n        <span className=\"flex font-mono text-white pl-4\">\n          Tailwind CSS\n        </span>\n      </div>\n    </section>\n  </section>\n);\n\nconst Project1: FC<Project1Props & ProjectProps> = (obj: {setShowProject1:any; showProject1:boolean; title:string; description:string; viewProject:string; viewCode:string; tech:string}) => (\n  <section className=\"w-264 h-364 relative\">\n    <div className=\"flex flex-row absolute top-0px h-50 w-118 border-solid border-t-2 border-x-2 border-white border-b-0 rounded-t-3xl justify-center gap-x-3 items-center\">\n      <Triangle />\n      <Circle />\n      <Square />\n    </div>\n    <button onClick={() => obj.setShowProject1(!obj.showProject1)}>\n      <>\n        <div className=\"flex border-2 border-solid border-white justify-center items-center absolute cursor-pointer top-50px w-full h-264\">\n          <span className=\"bg-google-logo bg-no-repeat bg-200 bg-center w-52 h-20 flex\" />\n        </div>\n        <div className=\"flex absolute justify-center items-center bottom-0px w-full cursor-pointer h-50 border-2 border-solid border-white border-t-0 rounded-br-3xl rounded-bl-3xl text-light-grey bg-white\">\n          <h4 className=\"text-grey text-xl font-mono select-none\">{obj.title}</h4>\n        </div>\n        { obj.showProject1 ? disableBodyScroll(Document as unknown as HTMLElement | Element) : enableBodyScroll(Document as unknown as HTMLElement | Element) }\n      </>\n    </button>\n    \n        { obj.showProject1 ? \n        <div className=\"z-40 fixed w-full h-full inset-0 bg-dark-grey\">\n        <div className=\"z-40 fixed mx-auto md:w-768 inset-0\">\n          <OutsideClickHandler onOutsideClick={() => { obj.setShowProject1(false) }}>\n            { obj.showProject1 ?\n          <Project1Overlay \n            setShowProject1={obj.setShowProject1} \n            showProject1={obj.showProject1} \n            title={obj.title} \n            description={obj.description} \n            viewProject={obj.viewProject} \n            viewCode={obj.viewCode} \n            tech={obj.tech} \n          /> : null }\n                  </OutsideClickHandler>\n</div>\n</div>\n        : null }\n\n\n  </section>\n);\n\nconst Project1Overlay: FC<Project1Props & ProjectProps> = (obj: {setShowProject1:any; showProject1:boolean; title:string; description:string; viewProject:string; viewCode:string; tech:string}) => (\n  <div className=\"md:bg-dark-grey md:w-768 md:fixed mx-auto md:inset-0 z-50 flex justify-center\">\n    <section className=\"fixed md:static w-full h-screen top-0px left-0px md:flex-col overflow-y-scroll scrollbar-hide z-50 md:w-768\">\n      <div className=\"project-overlay-top flex flex-col justify-self-center justify-evenly md:w-768 relative\">\n        <div className=\"clear-container\">\n          <button className=\"x\" onClick={() => obj.setShowProject1(!obj.showProject1)} />\n        </div>\n        <span className=\"bg-google-logo bg-no-repeat bg-200 bg-center w-52 h-20 flex my-9 self-center justify-self-center\" />\n        <div className=\"flex flex-row flex-wrap gap-x-4  gap-y-2 justify-evenly text-white\">\n          <a className=\"whitespace-nowrap\" href=\"https://glennphil.github.io/Google/\" target=\"_blank\" rel=\"noreferrer\" >\n            {obj.viewProject}\n          </a>\n          <a className=\"whitespace-nowrap\" href=\"https://github.com/glennphil/Google\" target=\"_blank\" rel=\"noreferrer\" >\n            {obj.viewCode}\n          </a>\n        </div>\n      </div>\n      <div className=\"project-overlay-bottom flex flex-col md:w-768\">\n        <h1 className=\"text-dark-grey text-3xl font-mono uppercase mb-2\">{obj.title}</h1>\n        <h3 className=\"text-forest-green text-2xl font-mono mt-5 mb-3 leading-10\">{obj.description}</h3>\n        <p className=\"font-mono text-black leading-5\">This project developed from a suggestion that my friend Pae gave which was to recreate the Google landing page. Currently, the goal of this project is to replicate the design and function of the Google (Argentina) Search landing page and of the Sign In, Sign Up, Login, Account, and 404 pages.</p>\n        <p className=\"font-mono text-black leading-5 mt-4\">I used many image assets from Google including Logos, App Icons, etc. For icons I used HeroIcons by Tailwind. There is no encryption for user information, however, in the future I would like to implement the use of JSON Web Tokens for this purpose.</p>\n        <h3 className=\"text-forest-green text-2xl font-mono mt-6 mb-3 leading-10\">{obj.tech}</h3>\n        <ul className=\"inline-grid grid-cols-2 auto-cols-fr gap-x-4 list-disc list-outside\">\n          <li className=\"ml-4\">CSS</li>\n          <li className=\"ml-4\">ReactJS</li>\n          <li className=\"ml-4\">i18next</li>\n          <li className=\"ml-4\">React Router</li>\n          <li className=\"ml-4\">Styled Components</li>\n          <li className=\"ml-4\">Axios</li>\n          <li className=\"ml-4\">ESLint</li>\n          <li className=\"ml-4\">JSON Server (Heroku)</li>\n          <li className=\"ml-4\">React Hook Form</li>\n          <li className=\"ml-4\">React Outside Click Handler</li>\n          <li className=\"ml-4\">React Helmet</li>\n        </ul>\n        <div className=\"flex flex-row justify-end mt-8 mb-2 gap-x-3\">\n          <div className=\"mt-2px\">\n            <Triangle />\n          </div>\n          <Circle />\n          <Square />\n        </div>\n      </div>\n    </section>\n  </div>\n);\n\nconst Project2: FC<Project2Props & ProjectProps>= (obj: {setShowProject2:any; showProject2:boolean; title:string; description:string; viewProject:string; viewCode:string; tech:string}) => (\n  <section className=\"w-264 h-364 relative\">\n    <div className=\"flex flex-row absolute top-0px h-50 w-118 border-solid border-t-2 border-x-2 border-white border-b-0 rounded-t-3xl justify-center gap-x-3 items-center\">\n      <Circle />\n      <Diamond />\n      <Star />\n    </div>\n    <button onClick={() => obj.setShowProject2(!obj.showProject2)}>\n      <>\n        <div className=\"flex border-2 border-solid border-white justify-center items-center absolute cursor-pointer top-50px w-full h-264\">\n          <span className=\"bg-portfolio-logo bg-no-repeat bg-200 bg-center w-52 h-20 flex\" />\n        </div>\n        <div className=\"flex absolute justify-center items-center bottom-0px w-full cursor-pointer h-50 border-2 border-solid border-white border-t-0 rounded-br-3xl rounded-bl-3xl text-light-grey bg-white \">\n          <h4 className=\"text-grey text-xl font-mono select-none\">{obj.title}</h4>\n        </div>\n        { obj.showProject2 ? disableBodyScroll(Document as unknown as HTMLElement | Element) : null }\n      </>\n    </button>\n    { obj.showProject2 ? \n      <Project2Overlay \n        setShowProject2={obj.setShowProject2} \n        showProject2={obj.showProject2} \n        title={obj.title} \n        description={obj.description} \n        viewProject={obj.viewProject} \n        viewCode={obj.viewCode} \n        tech={obj.tech} \n      />\n     : null }\n  </section>\n);\n\nconst Project2Overlay: FC<Project2Props & ProjectProps> = (obj: {setShowProject2:any; showProject2:boolean; title:string; description:string; viewProject:string; viewCode:string; tech:string}) => (\n  <div className=\"md:bg-dark-grey md:w-full md:fixed md:inset-0 z-50 flex justify-center\">\n    <section className=\"fixed md:static w-full h-screen top-0px left-0px md:flex-col overflow-y-scroll scrollbar-hide z-50 md:w-768\">\n      <div className=\"project-overlay-top flex flex-col justify-self-center justify-evenly md:w-768 relative\">\n        <div className=\"clear-container\">\n          <button className=\"x\" onClick={() => obj.setShowProject2(!obj.showProject2)} />\n        </div>\n        <span className=\"bg-portfolio-logo bg-no-repeat bg-200 bg-center w-52 h-20 flex my-9 self-center justify-self-center\" />\n        <div className=\"flex flex-row flex-wrap gap-x-4  gap-y-2 justify-evenly text-white\">\n          <a className=\"whitespace-nowrap\" href=\"https://github.com/glennphil/glennphil.github.io\" target=\"_blank\" rel=\"noreferrer\">\n            {obj.viewCode}\n          </a>\n        </div>\n      </div>\n      <div className=\"project-overlay-bottom flex flex-col md:w-768\">\n        <h1 className=\"text-dark-grey text-3xl font-mono uppercase mb-2\">{obj.title}</h1>\n        <h3 className=\"text-forest-green text-2xl font-mono mt-5 mb-3 leading-10\">{obj.description}</h3>\n        <p className=\"font-mono text-black leading-5\">This project's purpose is to serve as a demonstration of my past projects, and skills as a front-end developer. It was made using TailwindCSS, ReactJS, and TypeScript. It was designed by my partner. It was built with a mobile-first design.</p>\n        <p className=\"font-mono text-black leading-5 mt-4\">The project is extremely simple and uses minimal dependencies. My blog posts are fetched using Axios and pages are switched by using a button (or swipe) which act as a counter, increasing (to the next) or decreasing (to the previous).</p>\n        <h3 className=\"text-forest-green text-2xl font-mono mt-6 mb-3 leading-10\">{obj.tech}</h3>\n        <ul className=\"inline-grid grid-cols-2 auto-cols-fr gap-x-4 list-disc list-outside\">\n          <li className=\"ml-4\">Typescript</li>\n          <li className=\"ml-4\">ReactJS</li>\n          <li className=\"ml-4\">Tailwind CSS</li>\n          <li className=\"ml-4\">React Router</li>\n          <li className=\"ml-4\">Axios</li>\n          <li className=\"ml-4\">Body Scroll Lock</li>\n          <li className=\"ml-4\">React Swipeable</li>\n          <li className=\"ml-4\">useState</li>\n          <li className=\"ml-4\">useEffect</li>\n          <li className=\"ml-4\">Function Components</li>\n          <li className=\"ml-4\">JSON Server (Heroku)</li>\n        </ul>\n        <div className=\"flex flex-row justify-end mt-8 mb-2 gap-x-3\">\n          <div className=\"mt-2px\">\n            <Triangle />\n          </div>\n          <Circle />\n          <Square />\n        </div>\n      </div>\n    </section>\n  </div>\n);\n\nconst Project3: FC<Project3Props & ProjectProps>= (obj: {setShowProject3:any; showProject3:boolean; title:string; description:string; viewProject:string; viewCode:string; tech:string}) => (\n  <section className=\"w-264 h-364 relative\">\n    <div className=\"flex flex-row absolute top-0px h-50 w-118 border-solid border-t-2 border-x-2 border-white border-b-0 rounded-t-3xl justify-center gap-x-3 items-center\">\n\n    </div>\n    <button onClick={() => obj.setShowProject3(!obj.showProject3)}>\n      <>\n        <div className=\"flex border-2 border-solid border-white justify-center items-center absolute cursor-pointer top-50px w-full h-264\">\n          <span className=\"bg-grey-2 h-2 w-373 -rotate-45 absolute\" />\n          <span className=\"bg-grey-2 h-2 w-373 rotate-45 absolute\" />\n        </div>\n        <div className=\"flex absolute justify-center items-center bottom-0px w-full cursor-pointer h-50 border-2 border-solid border-white border-t-0 rounded-br-3xl rounded-bl-3xl text-light-grey bg-white \">\n          <h4 className=\"text-grey text-xl font-mono select-none\">{obj.title}</h4>\n        </div>\n        { obj.showProject3 ? disableBodyScroll(Document as unknown as HTMLElement | Element) : null }\n      </>\n    </button>\n    { obj.showProject3 ? \n      <Project3Overlay \n        setShowProject3={obj.setShowProject3} \n        showProject3={obj.showProject3} \n        title={obj.title} \n        description={obj.description} \n        viewProject={obj.viewProject} \n        viewCode={obj.viewCode} \n        tech={obj.tech} \n      /> \n    : null }\n  </section>\n);\n\nconst Project3Overlay: FC<Project3Props & ProjectProps> = (obj: {setShowProject3:any; showProject3:boolean; title:string; description:string; viewProject:string; viewCode:string; tech:string}) => (\n  <div className=\"md:bg-dark-grey md:w-full md:fixed md:inset-0 z-50 flex justify-center\">\n    <section className=\"fixed md:static w-full h-screen top-0px left-0px md:flex-col overflow-y-scroll scrollbar-hide z-50 md:w-768\">\n      <div className=\"project-overlay-top flex flex-col justify-self-center justify-evenly md:w-768 relative\">\n        <div className=\"clear-container\">\n          <button className=\"x\" onClick={() => obj.setShowProject3(!obj.showProject3)} />\n        </div>\n        <span className=\"w-52 h-20 flex my-9 text-white text-center text-3xl justify-center font-sans self-center\">\n          Shop\n          </span>\n        <div className=\"flex flex-row flex-wrap gap-x-4  gap-y-2 justify-evenly text-white\">\n          <a className=\"whitespace-nowrap\" href=\"#\">{obj.viewProject}</a>\n          <a className=\"whitespace-nowrap\" href=\"https://github.com/glennphil/CoffeeStore\" target=\"_blank\" rel=\"noreferrer\">{obj.viewCode}</a>\n        </div>\n      </div>\n      <div className=\"project-overlay-bottom flex flex-col md:w-768\">\n        <h1 className=\"text-dark-grey text-3xl font-mono uppercase mb-2\">{obj.title}</h1>\n        <h3 className=\"text-forest-green text-2xl font-mono mt-5 mb-3 leading-10\">{obj.description}</h3>\n        <p className=\"font-mono text-black leading-5\">My next project is a work in progress. I am creating an online store which allows users to shop as guests or to create an account and receive discounts. The app will integrate Stripe's payment services so that users can purchase goods through with existing credit or debit card. </p>\n        <h3 className=\"text-forest-green text-2xl font-mono mt-6 mb-3 leading-10\">{obj.tech}</h3>\n        <ul className=\"inline-grid grid-cols-2 auto-cols-fr gap-x-4 list-disc list-outside\">\n          <li className=\"ml-4\">ReactJS</li>\n          <li className=\"ml-4\">TypeScript</li>\n          <li className=\"ml-4\">CSS</li>\n          <li className=\"ml-4\">MongoDB</li>\n          <li className=\"ml-4\">Mongoose</li>\n          <li className=\"ml-4\">React Router</li>\n        </ul>\n        <div className=\"flex flex-row justify-end mt-8 mb-2 gap-x-3\">\n          <div className=\"mt-2px\">\n            <Triangle />\n          </div>\n          <Circle />\n          <Square />\n        </div>\n      </div>\n    </section>\n  </div>\n);\n\nconst Triangle = () => <span className=\"flex triangle\"/>;\nconst Circle = () => <span className=\"flex circle\"/>;\nconst Square = () => <span className=\"flex square\"/>;\nconst Diamond = () => <div className=\"diamond\" />;\nconst Star = () => <div className=\"star\" />;\n\nexport default Projects;",{"ruleId":"52","severity":1,"message":"53","line":59,"column":7,"nodeType":"54","endLine":59,"endColumn":144},{"ruleId":"52","severity":1,"message":"53","line":60,"column":7,"nodeType":"54","endLine":60,"endColumn":124},{"ruleId":"52","severity":1,"message":"53","line":61,"column":7,"nodeType":"54","endLine":61,"endColumn":93},{"ruleId":"52","severity":1,"message":"53","line":63,"column":5,"nodeType":"54","endLine":63,"endColumn":131},{"ruleId":"55","severity":1,"message":"56","line":23,"column":10,"nodeType":"57","messageId":"58","endLine":23,"endColumn":15},{"ruleId":"55","severity":1,"message":"59","line":33,"column":13,"nodeType":"57","messageId":"58","endLine":33,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":323,"column":11,"nodeType":"54","endLine":323,"endColumn":53},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'date2' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]