[{"/home/roqa/Documents/Git/portfolio/src/index.tsx":"1","/home/roqa/Documents/Git/portfolio/src/App.tsx":"2","/home/roqa/Documents/Git/portfolio/src/pages/Home/index.tsx":"3","/home/roqa/Documents/Git/portfolio/src/pages/404/index.tsx":"4","/home/roqa/Documents/Git/portfolio/src/pages/Home/Header/index.tsx":"5","/home/roqa/Documents/Git/portfolio/src/pages/Home/Blog/index.tsx":"6","/home/roqa/Documents/Git/portfolio/src/pages/Home/Footer/index.tsx":"7","/home/roqa/Documents/Git/portfolio/src/pages/Home/Projects/index.tsx":"8"},{"size":274,"mtime":1654867343932,"results":"9","hashOfConfig":"10"},{"size":372,"mtime":1654858560480,"results":"11","hashOfConfig":"10"},{"size":347,"mtime":1656028443844,"results":"12","hashOfConfig":"10"},{"size":720,"mtime":1655927693238,"results":"13","hashOfConfig":"10"},{"size":4443,"mtime":1656028142719,"results":"14","hashOfConfig":"10"},{"size":9816,"mtime":1656028193290,"results":"15","hashOfConfig":"10"},{"size":530,"mtime":1656028224758,"results":"16","hashOfConfig":"10"},{"size":11353,"mtime":1656028295753,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1jsjig8",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"21"},"/home/roqa/Documents/Git/portfolio/src/index.tsx",[],[],[],"/home/roqa/Documents/Git/portfolio/src/App.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/Home/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/404/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/Home/Header/index.tsx",["46","47","48","49","50","51","52","53","54","55","56"],[],"import { FC } from 'react';\n\ninterface HeadingProps {\n  heading: string;\n}\n\nconst Header = () => {\n  return (\n    <header className=\"flex flex-col mx-auto container overflow-fix justify-between heightfix\">\n      <NavBar/>\n      <div className=\"xl:flex flex-row container mx-auto justify-center xl:mt-12\">\n        <div className=\"flex flex-col\">\n          <Heading \n            heading={`Hi, I'm Glenn Phillips! \\n`} \n          />\n          <div className=\"flex flex-col h-full w-full container\">\n            <div className=\"md:flex flex-row w-full container\">\n              <div className=\"flex flex-col justify-start w-full container\">\n                <SubHeading/>\n                <SocialButtons/>\n              </div>\n              <Profile/>\n            </div>\n          </div>\n        </div>\n        <ProfileXL/>\n      </div>\n    </header>\n  )\n}\n\nconst NavBar = () => (\n  <section className=\"flex justify-end\">\n    <NavMobile/>\n    <Navigation/>\n  </section>\n);\n\nconst Navigation = () => (\n  <nav className=\"flex-row container justify-between px-5 text-sm max-w-lg hidden md:flex\">\n    <a className=\"text-gold link-underline-gold\" href=\"resume.pdf\" download>\n      download my resume\n    </a>\n    <a className=\"text-forest-green link-underline\" href=\"#projects\">\n      portfolio\n    </a>\n    <a className=\"text-forest-green link-underline\" href=\"#blog\">\n      blog\n    </a>\n    <a className=\"text-forest-green link-underline\" href=\"#contact\">\n      contact\n    </a>\n  </nav>\n);\n\nconst NavMobile = () => (\n  <nav className=\"flex flex-row container justify-end justify-between md:hidden\">\n    <div className=\"flex flex-row items-center gap-x-2\">\n      <a className=\"bg-github-icon bg-no-repeat bg-46 bg-center h-10 w-10\" href=\"https://github.com/paq000\" target=\"_blank\" rel=\"noreferrer\" />\n      <a className=\"bg-linkedin-icon bg-no-repeat bg-46 bg-center h-10 w-10\" href=\"\" />\n      <a className=\"bg-whatsapp-icon bg-no-repeat bg-46 bg-center h-10 w-10\"  href=\"\" />\n      <a className=\"bg-email-icon bg-no-repeat bg-46 bg-center h-10 w-10\" href=\"#contact\" />\n    </div>\n    <a className=\"bg-download-icon bg-no-repeat bg-46 bg-center w-12 h-12 shrink-0 ml-4 gold-filter\" href=\"resume.pdf\" download />\n  </nav>\n);\n\nconst SocialButtons = () => (\n  <div className=\"hidden flex-row w-min gap-x-6 flex-start md:flex md:my-10\">\n    <a href=\"\">\n      <div className=\"flex items-center justify-center rounded-full border-2 bg-transparent border-white w-11 h-11\">\n        <div className=\"flex bg-github-icon bg-no-repeat bg-46 bg-center h-8 w-8\"/>\n      </div>\n    </a>\n    <a href=\"\">\n      <div className=\"flex items-center justify-center rounded-full border-2 bg-transparent border-white w-11 h-11\">\n        <div className=\"flex bg-linkedin-icon bg-no-repeat bg-46 bg-center h-8 w-8\"/>\n      </div>\n    </a>\n    <a href=\"\">\n      <div className=\"flex items-center justify-center rounded-full border-2 bg-transparent border-white w-11 h-11\">\n        <div className=\"flex bg-whatsapp-icon bg-no-repeat bg-46 bg-center h-8 w-8\"/>\n      </div>\n    </a>\n    <a href=\"\">\n      <div className=\"flex items-center justify-center rounded-full border-2 bg-transparent border-white w-11 h-11\">\n        <div className=\"flex bg-email-icon bg-no-repeat bg-46 bg-center h-8 w-8\"/>\n      </div>\n    </a>\n  </div>\n);\n\nconst Heading: FC<HeadingProps> = ({heading}) => (\n  <div className=\"flex flex-col flex-start my-5 md:mt-10\">\n    <h1 className=\"text-white font-sans text-5xl display-linebreak uppercase\">{heading}</h1>\n  </div>\n);\n\nconst SubHeading = () => (\n  <h3 className=\"flex flex-start text-light-grey font-normal font-mono leading-6 text-2xl display-linebreak\">\n    <div className=\"xl:hidden\">\n      {`I'm a front-end developer \\n from the US.`}\n    </div>\n    <div className=\"hidden xl:flex\">\n      {`I'm a front-end developer from the US.`}\n    </div>\n  </h3>\n);\n\nconst Profile = () => (\n  <div className=\"flex flex-row justify-end mt-4 xl:hidden\">\n    <div className=\"bg-[url('http://paq000.github.io/portfolio/assets/profile.png')] bg-no-repeat bg-center bg-[length:320px_414px] w-320 h-414 md:bg-[length:388px_498px] md:w-388 md:h-498 xl:hidden\" />\n  </div>\n);\n\nconst ProfileXL = () => (\n  <div className=\"hidden xl:flex flex-row justify-end mt-16\">\n    <div className=\"hidden xl:flex bg-[url('http://paq000.github.io/portfolio/assets/profile.png')] bg-no-repeat bg-center bg-[length:430px_552px] w-430 h-552\" />\n  </div>\n);\n\nexport default Header;\n","/home/roqa/Documents/Git/portfolio/src/pages/Home/Blog/index.tsx",["57"],[],"import axios from 'axios';\nimport { FC, useState, useEffect } from 'react';\nimport { useSwipeable } from \"react-swipeable\";\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\ninterface BlogProps {\n  heading: string;\n}\n\nconst Blog = () => {\n  const [show, setShow] = useState(false);\n  const [title, setTitle] = useState([]);\n  const [title2, setTitle2] = useState([]);\n  const [text, setText] = useState([]);\n  const [text2, setText2] = useState([]);\n  const [time, setTime] = useState([]);\n  const [day, setDay] = useState([]);\n  const [date, setDate] = useState([]);\n  const [counter, setCounter] = useState(0);\n  const [ids, setIDS] = useState(0);\n  const URL:string = \"https://portfolio-blog-posts.herokuapp.com/posts/\";\n  const firstPostURL:string = URL + 0;\n  const secondPostURL:string = URL + 1;\n\n  // get total number of posts\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await axios.get(URL)\n        .then(res => {\n          const ids = res.data.length;\n          setIDS(ids);\n        })\n    }\n    fetchData()\n      .catch(console.error);\n  }, [ids])\n\n  // total posts - 1\n  let numPosts = (ids - 1);\n\n  // get first blog post\n  useEffect(() => {\n    axios.get(firstPostURL)\n      .then((response:any) => {\n        setTitle(response.data.title);\n        setText(response.data.text);\n        setTime(response.data.time);\n        setDay(response.data.day);\n        setDate(response.data.date);\n      })\n  }, [firstPostURL])\n\n  // get second blog post\n    useEffect(() => {\n      axios.get(secondPostURL)\n        .then((response:any) => {\n          setTitle2(response.data.title);\n          setText2(response.data.text);\n        })\n    }, [secondPostURL])\n\n  // next blog post\n  const increase = async() => {\n    if (counter < numPosts) {\n      setCounter(counter => counter + 1);\n      await axios.get(URL + (counter + 1))\n        .then((response:any) => {\n          setTitle(response.data.title);\n          setText(response.data.text);\n          setTime(response.data.time);\n          setDay(response.data.day);\n          setDate(response.data.date);\n        })\n      // get next post title\n      await axios.get(URL + (counter + 2))\n        .then((response:any) => {\n          setTitle2(response.data.title);\n          setText2(response.data.text);\n        })\n    } else if (counter === numPosts) {\n      setCounter(counter => counter = 0);\n      await axios.get(firstPostURL)\n        .then((response:any) => {\n          setTitle(response.data.title);\n          setText(response.data.text);\n          setTime(response.data.time);\n          setDay(response.data.day);\n          setDate(response.data.date);\n        })\n      // get next post title\n      await axios.get(secondPostURL)\n        .then((response:any) => {\n          setTitle2(response.data.title);\n          setText2(response.data.text);\n        })\n    }\n  };\n \n  // previous blog post\n  const decrease = async() => {\n    if (counter === 0) {\n      setCounter(counter => counter = numPosts)\n      await axios.get(URL + (counter + numPosts))\n        .then((response:any) => {\n          setTitle(response.data.title);\n          setText(response.data.text);\n          setTime(response.data.time);\n          setDay(response.data.day);\n          setDate(response.data.date);\n        })\n      // get next post title\n      await axios.get(URL + (counter + numPosts + 1))\n        .then((response:any) => {\n          setTitle2(response.data.title);\n          setText2(response.data.text);\n        })\n    } else if (counter > 0) {\n        setCounter(counter => counter - 1);\n        await axios.get(URL + (counter - 1))\n          .then((response:any) => {\n            setTitle(response.data.title);\n            setText(response.data.text);\n            setTime(response.data.time);\n            setDay(response.data.day);\n            setDate(response.data.date);\n          })\n        // get next post title\n        await axios.get(URL + counter)\n          .then((response:any) => {\n            setTitle2(response.data.title);\n            setText2(response.data.text);\n          })\n    }\n  };\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => increase(),\n    onSwipedRight: () => decrease()\n  });\n\n  return (\n    <section className=\"flex flex-col container mt-28 gap-4 xl:mt-40\">\n      <Heading \n        heading={`Blog`}\n      />\n      <div className=\"md:flex justify-center md:relative md:h-414\">\n        <section className=\"flex flex-col w-auto justify-center md:flex-row-reverse md:gap-x-12 md:absolute\">\n          <>\n            <div className=\"flex flex-col gap-8 md:mb-[-2px] lg:mb-[4px]\">\n              <button onClick={() => setShow(!show)}>\n                <>\n                  <FirstBlogPost \n                    title={title} \n                    time={time}\n                    text={text}\n                    day={day}\n                    date={date}\n                  />\n                  { show ? disableBodyScroll(Document as any) : enableBodyScroll(Document as any) } \n                </>\n              </button>\n              <SecondBlogPost \n                title2={title2}\n                text2={text2}\n              />\n            </div>\n            { show ? \n              <div className=\"w-full h-full z-40 fixed bg-white inset-0\">\n                <BlogPost \n                  title={title} \n                  time={time}\n                  text={text}\n                  day={day}\n                  date={date}\n                  handlers={handlers}\n                /> \n                <BlogButtons\n                  show={show} \n                  setShow={setShow} \n                  increase={increase}\n                  decrease={decrease}\n                />\n              </div>\n            : null }\n          </>\n          <BlogPic />\n        </section>\n      </div>\n    </section>\n  );\n};\n\nconst Heading: FC<BlogProps> = ({heading}) => (\n  <h2 id=\"blog\" className=\"flex font-mono text-forest-green leading-10 text-2xl uppercase\">\n    {heading}\n  </h2>\n)\n\nconst BlogPic = () => (\n  <>\n    <div className=\"md:hidden flex h-0 w-3/4 pb-55p relative self-center\">\n      <div className=\"absolute inset-0 md:flex self-center md:self-end z-30 bg-[url('http://paq000.github.io/portfolio/assets/blog-man.png')] bg-no-repeat bg-center bg-[length:100%_100%] w-full h-full\" />\n    </div>\n    <div className=\"hidden md:flex self-center md:self-end z-30 bg-[url('http://paq000.github.io/portfolio/assets/blog-man.png')] bg-no-repeat bg-center bg-[length:320px_244px] w-320 h-244 lg:bg-[length:400px_302px] lg:w-400 lg:h-302\" />\n    <div className=\"hidden md:flex z-20 h-2 bg-white md:w-688 lg:w-884 xl:w-1040 absolute bottom-28px lg:bottom-35px\" />\n  </>\n)\n\nconst FirstBlogPost = ({title, text, time, day, date}:any) => (\n  <div className=\"flex flex-col font-mono bg-white w-full h-52 pt-6 px-7 pb-4 mb-6 rounded-xl relative justify-between md:w-80\">\n    <h6 className=\"flex text-dark-grey font-bold uppercase font-mono\">\n      {title}\n    </h6>\n    <p className=\"line-clamp-4 text-left\">\n      {text}\n    </p>\n    <h6 className=\"flex text-dark-grey text-sm font-mono self-end justify-end uppercase\">\n      {time}&nbsp;{day}&nbsp;{date}\n    </h6>\n    <div className=\"h-0 w-0 border-t-white border-l-transparent border-r-transparent border-b-transparent border-solid border-t-30 border-r-30 border-b-0 border-l-0 mt-180px ml-30px absolute\" />\n  </div>\n)\n\nconst SecondBlogPost = ({title2, text2}:any) => (\n  <>\n  <div className=\"flex flex-col font-mono bg-white w-full h-28 pt-6 px-7 pb-4 rounded-t-xl relative justify-between md:w-80\">\n    <h6 className=\"flex text-dark-grey font-bold uppercase font-mono select-none\">\n      {title2}\n    </h6>\n    <p className=\"line-clamp-4 text-left select-none\">\n      {text2}\n    </p>\n  </div>\n  <div className=\"h-8 z-10 -mt-60px mb-8 md:mb-0 -mx-2 bg-dark-grey\" />\n  </>\n)\n\nconst BlogPost = ({title, text, time, day, date, handlers}:any) => (\n  <div className=\"h-[calc(100%-70px)] overflow-y-scroll w-full md:w-768 scrollbar-hide pt-50px pb-10px px-45px md:mx-auto lg:scrollbar-default\" {...handlers}>\n    <h6 className=\"flex text-dark-grey font-bold uppercase font-mono mb-3\">\n      {title}\n    </h6>\n    <p className=\"whitespace-pre-line break-words leading-5\">\n      {text}\n    </p>\n    <div className=\"flex flex-col text-dark-grey text-sm text-left font-mono mt-3 items-end\">\n      <h6 className=\"uppercase\">\n        {time}&nbsp;{day}\n      </h6>\n      <h6 className=\"uppercase\">\n        {date}\n      </h6>\n    </div>\n  </div>\n)\n\nconst BlogButtons = ({setShow, show, increase, decrease}:any) => (\n  <div className=\"md:flex justify-center\">\n    <div className=\"h-60 mt-0 mb-10px mx-45px border-t-2 border-solid border-light-green w-[calc(100%-90px)] flex flex-row items-center justify-evenly md:w-768\">\n      <LeftArrow \n        decrease={decrease}\n      />\n      <Close\n        show={show}\n        setShow={setShow}\n      />\n      <RightArrow \n        increase={increase}\n      />\n    </div>\n  </div>\n)\n\nconst LeftArrow = ({decrease}:any) => (\n  <button className=\"h-12 w-12\" onClick={decrease} title=\"Previous\">\n    <div className=\"flex scale-50 items-center justify-center\">\n      <div className=\"arrow-icon rotate-270\">\n        <span className=\"arrow\" />\n      </div>\n    </div>\n  </button>\n)\n\nconst RightArrow = ({increase}:any) => (\n  <button className=\"h-12 w-12\" onClick={increase} title=\"Next\">\n    <div className=\"flex scale-50 items-center justify-center\">\n      <div className=\"arrow-icon rotate-90\">\n        <span className=\"arrow\" />\n      </div>\n    </div>\n  </button>\n)\n\nconst Close = ({setShow, show}:any) => (\n  <button className=\"h-12 w-12\" onClick={() => setShow(!show)} title=\"Close\">\n    <div className=\"flex scale-75 justify-center items-center\">\n      <div className=\"x\" />\n    </div>\n  </button>\n)\n\nexport default Blog;\n","/home/roqa/Documents/Git/portfolio/src/pages/Home/Footer/index.tsx",[],[],"/home/roqa/Documents/Git/portfolio/src/pages/Home/Projects/index.tsx",["58","59","60","61"],[],"import { FC, useState } from 'react';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\ninterface Project1Props {\n  title: string;\n  showProject1: any;\n  setShowProject1: any;\n}\ninterface Project2Props {\n  title: string;\n  showProject2: any;\n  setShowProject2: any;\n}\ninterface ProjectProps {\n  description: string;\n  viewProject: string;\n  viewCode: string;\n  tech: string;\n}\n\nconst Projects = () => {\n  const [showProject1, setShowProject1] = useState(false);\n  const [showProject2, setShowProject2] = useState(false);\n  const description = \"Description\";\n  const viewProject = \"see the full project\";\n  const viewCode = \"view code\";\n  const tech = \"Tech used\";\n\n  return (\n    <section className=\"flex flex-col container mt-28 gap-4\">\n      <div className=\"xl:flex flex-row justify-between items-center content-center xl:mb-12 xl:mt-20\">\n        <h2 id=\"projects\" className=\"flex font-mono text-forest-green text-2xl leading-6 uppercase self-end\">\n          Projects\n        </h2>\n        <Key />\n      </div>\n      <section className=\"flex flex-wrap container justify-center md:grid md:grid-cols-2 lg:grid-cols-3 md:auto-rows-fr gap-y-20 gap-x-[50px] md:gap-x-[110px] lg:gap-x-[46px] xl:gap-x-[124px] z-40\">\n        <Project1\n          title={`Google Frontend`}\n          showProject1={showProject1}\n          setShowProject1={setShowProject1}\n          description={description}\n          viewProject={viewProject}\n          viewCode={viewCode}\n          tech={tech}\n        />\n        <Project2\n          title={`Portfolio`}\n          showProject2={showProject2}\n          setShowProject2={setShowProject2}\n          description={description}\n          viewProject={viewProject}\n          viewCode={viewCode}\n          tech={tech}\n        />\n        <Project2\n          title={`Shop`}\n          showProject2={showProject2}\n          setShowProject2={setShowProject2}\n          description={description}\n          viewProject={viewProject}\n          viewCode={viewCode}\n          tech={tech}\n        />\n      </section>\n    </section>\n  );\n};\n\nconst Key = () => (\n  <section className=\"flex flex-row w-auto justify-end mb-4 xl:mb-0\">\n    <section className=\"flex flex-col xl:flex-row gap-x-12\">\n      <div className=\"flex flex-row my-1 items-center\">\n        <Triangle />\n        <span className=\"flex font-mono text-red pl-4\">\n          CSS\n        </span>\n      </div>\n      <div className=\"flex flex-row my-1 items-center\">\n        <Circle />\n        <span className=\"flex font-mono text-blue pl-4\">\n          ReactJS\n        </span>\n      </div>\n      <div className=\"flex flex-row my-1 items-center\">\n        <Square />\n        <span className=\"flex font-mono text-gold pl-4\">\n          JavaScript\n        </span>\n      </div>\n      <div className=\"flex flex-row my-1 items-center\">\n        <Diamond />\n        <span className=\"flex font-mono text-light-green pl-4\">\n          Typescript\n        </span>\n      </div>\n      <div className=\"flex flex-row my-1 items-center\">\n        <Star />\n        <span className=\"flex font-mono text-white pl-4\">\n          Tailwind CSS\n        </span>\n      </div>\n    </section>\n  </section>\n);\n\nconst Project1: FC<Project1Props & ProjectProps> = ({setShowProject1, showProject1, title, description, viewProject, viewCode, tech}: any) => (\n  <section className=\"w-264 h-344 relative\">\n    <div className=\"flex flex-row absolute top-0px h-50 w-118 border-solid border-t-2 border-x-2 border-white border-b-0 rounded-t-3xl justify-center gap-x-3 items-center\">\n      <Triangle />\n      <Circle />\n      <Square />\n    </div>\n    <button onClick={() => setShowProject1(!showProject1)}>\n      <>\n        <div className=\"flex border-2 border-solid border-white justify-center items-center absolute cursor-pointer top-50px w-full h-244\">\n          <span className=\"bg-google-logo bg-no-repeat bg-200 bg-center w-52 h-20 flex\" />\n        </div>\n        <div className=\"flex absolute justify-center items-center bottom-0px w-full cursor-pointer h-50 border-2 border-solid border-white border-t-0 rounded-br-3xl rounded-bl-3xl text-light-grey bg-white\">\n          <h4 className=\"text-grey text-xl font-mono select-none\">{title}</h4>\n        </div>\n        { showProject1 ? disableBodyScroll(Document as any) : enableBodyScroll(Document as any) }\n      </>\n    </button>\n    { showProject1 ? <Project1Overlay setShowProject1={setShowProject1} showProject1={showProject1} title={title} description={description} viewProject={viewProject} viewCode={viewCode} tech={tech} /> : null }\n  </section>\n);\n\nconst Project1Overlay: FC<Project1Props & ProjectProps> = ({setShowProject1, showProject1, title, description, viewProject, viewCode, tech}) => (\n  <section className=\"project-overlay scrollbar-hide z-50\">\n    <div className=\"project-overlay-top flex flex-col justify-evenly\">\n      <div className=\"clear-container\">\n        <button className=\"x\" onClick={() => setShowProject1(!showProject1)} />\n      </div>\n      <span className=\"bg-google-logo bg-no-repeat bg-200 bg-center w-52 h-20 flex my-9 self-center justify-self-center\" />\n      <div className=\"flex flex-row flex-wrap gap-x-4  gap-y-2 justify-evenly text-white\">\n        <a className=\"whitespace-nowrap\" href=\"\">{viewProject}</a>\n        <a className=\"whitespace-nowrap\" href=\"\">{viewCode}</a>\n      </div>\n    </div>\n    <div className=\"project-overlay-bottom flex flex-col\">\n      <h1 className=\"text-dark-grey text-3xl font-mono uppercase mb-2\">{title}</h1>\n      <h3 className=\"text-forest-green text-2xl font-mono mt-5 mb-3 leading-10\">{description}</h3>\n      <p className=\"font-mono text-black leading-5\">This project developed from a suggestion that my friend Pae gave which was to recreate the Google landing page. Currently, the goal of this project is to replicate the design and function of the Google (Argentina) Search landing page and of the Sign In, Sign Up, Login, Account, and 404 pages.</p>\n      <p className=\"font-mono text-black leading-5 mt-4\">I used many image assets from Google including Logos, App Icons, etc. For icons I used HeroIcons by Tailwind. There is no encryption for user information, however, in the future I would like to implement the use of JSON Web Tokens for this purpose.</p>\n      <h3 className=\"text-forest-green text-2xl font-mono mt-6 mb-3 leading-10\">{tech}</h3>\n      <ul className=\"inline-grid grid-cols-2 auto-cols-fr gap-x-4 list-disc list-outside\">\n        <li className=\"ml-4\">CSS</li>\n        <li className=\"ml-4\">ReactJS</li>\n        <li className=\"ml-4\">i18next</li>\n        <li className=\"ml-4\">React Router</li>\n        <li className=\"ml-4\">Styled Components</li>\n        <li className=\"ml-4\">Axios</li>\n        <li className=\"ml-4\">ESLint</li>\n        <li className=\"ml-4\">JSON Server (Heroku)</li>\n        <li className=\"ml-4\">React Hook Form</li>\n        <li className=\"ml-4\">React Outside Click Handler</li>\n        <li className=\"ml-4\">React Helmet</li>\n      </ul>\n      <div className=\"flex flex-row justify-end mt-8 mb-2 gap-x-3\">\n        <div className=\"mt-2px\">\n          <Triangle />\n        </div>\n        <Circle />\n        <Square />\n      </div>\n    </div>\n  </section>\n);\n\nconst Project2: FC<Project2Props & ProjectProps>= ({setShowProject2, showProject2, title, description, viewProject, viewCode, tech}: any) => (\n  <section className=\"w-264 h-344 relative\">\n    <div className=\"flex flex-row absolute top-0px h-50 w-118 border-solid border-t-2 border-x-2 border-white border-b-0 rounded-t-3xl justify-center gap-x-3 items-center\">\n      <Circle />\n      <Diamond />\n      <Star />\n    </div>\n    <button onClick={() => setShowProject2(!showProject2)}>\n      <>\n        <div className=\"flex border-2 border-solid border-white justify-center items-center absolute cursor-pointer top-50px w-full h-244\">\n          <span className=\"bg-google-logo bg-no-repeat bg-200 bg-center w-52 h-20 flex\" />\n        </div>\n        <div className=\"flex absolute justify-center items-center bottom-0px w-full cursor-pointer h-50 border-2 border-solid border-white border-t-0 rounded-br-3xl rounded-bl-3xl text-light-grey bg-white \">\n          <h4 className=\"text-grey text-xl font-mono select-none\">{title}</h4>\n        </div>\n        { showProject2 ? disableBodyScroll(Document as any) : null }\n      </>\n    </button>\n    { showProject2 ? <Project2Overlay setShowProject2={setShowProject2} showProject2={showProject2} title={title} description={description} viewProject={viewProject} viewCode={viewCode} tech={tech} /> : null }\n  </section>\n);\n\nconst Project2Overlay: FC<Project2Props & ProjectProps> = ({setShowProject2, showProject2, title, description, viewProject, viewCode, tech}) => (\n  <section className=\"project-overlay scrollbar-hide\">\n    <div className=\"project-overlay-top flex flex-col justify-evenly\">\n      <div className=\"clear-container\">\n        <button className=\"x\" onClick={() => setShowProject2(!showProject2)} />\n      </div>\n      <span className=\"bg-google-logo bg-no-repeat bg-200 bg-center w-52 h-20 flex my-9 self-center justify-self-center\" />\n      <div className=\"flex flex-row flex-wrap gap-x-4  gap-y-2 justify-evenly text-white\">\n        <a className=\"whitespace-nowrap\" href=\"\">{viewProject}</a>\n        <a className=\"whitespace-nowrap\" href=\"\">{viewCode}</a>\n      </div>\n    </div>\n    <div className=\"project-overlay-bottom flex flex-col\">\n      <h1 className=\"text-dark-grey text-3xl font-mono uppercase mb-2\">{title}</h1>\n      <h3 className=\"text-forest-green text-2xl font-mono mt-5 mb-3 leading-10\">{description}</h3>\n      <p className=\"font-mono text-black leading-5\">This project's purpose is to serve as a demonstration of my past projects, and skills as a front-end developer. It was made using TailwindCSS, ReactJS, and TypeScript. It was designed by my partner. It was built with a mobile-first design.</p>\n      <p className=\"font-mono text-black leading-5 mt-4\">The project is extremely simple and uses minimal dependencies. My blog posts are fetched using Axios and pages are switched by using a button (or swipe) which act as a counter, increasing (to the next) or decreasing (to the previous).</p>\n      <h3 className=\"text-forest-green text-2xl font-mono mt-6 mb-3 leading-10\">{tech}</h3>\n      <ul className=\"inline-grid grid-cols-2 auto-cols-fr gap-x-4 list-disc list-outside\">\n        <li className=\"ml-4\">Typescript</li>\n        <li className=\"ml-4\">ReactJS</li>\n        <li className=\"ml-4\">Tailwind CSS</li>\n        <li className=\"ml-4\">React Router</li>\n        <li className=\"ml-4\">Axios</li>\n        <li className=\"ml-4\">Body Scroll Lock</li>\n        <li className=\"ml-4\">React Swipeable</li>\n        <li className=\"ml-4\">useState</li>\n        <li className=\"ml-4\">useEffect</li>\n        <li className=\"ml-4\">Function Components</li>\n        <li className=\"ml-4\">JSON Server (Heroku)</li>\n      </ul>\n      <div className=\"flex flex-row justify-end mt-8 mb-2 gap-x-3\">\n        <div className=\"mt-2px\">\n          <Triangle />\n        </div>\n        <Circle />\n        <Square />\n      </div>\n    </div>\n  </section>\n);\n\nconst Triangle = () => <span className=\"flex triangle\"/>;\nconst Circle = () => <span className=\"flex circle\"/>;\nconst Square = () => <span className=\"flex square\"/>;\nconst Diamond = () => <div className=\"diamond\" />;\nconst Star = () => <div className=\"star\" />;\n\nexport default Projects;",{"ruleId":"62","severity":1,"message":"63","line":59,"column":7,"nodeType":"64","endLine":59,"endColumn":144},{"ruleId":"62","severity":1,"message":"63","line":60,"column":7,"nodeType":"64","endLine":60,"endColumn":88},{"ruleId":"65","severity":1,"message":"66","line":60,"column":7,"nodeType":"64","endLine":60,"endColumn":88},{"ruleId":"62","severity":1,"message":"63","line":61,"column":7,"nodeType":"64","endLine":61,"endColumn":89},{"ruleId":"65","severity":1,"message":"66","line":61,"column":7,"nodeType":"64","endLine":61,"endColumn":89},{"ruleId":"62","severity":1,"message":"63","line":62,"column":7,"nodeType":"64","endLine":62,"endColumn":93},{"ruleId":"62","severity":1,"message":"63","line":64,"column":5,"nodeType":"64","endLine":64,"endColumn":131},{"ruleId":"65","severity":1,"message":"66","line":70,"column":5,"nodeType":"64","endLine":70,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":75,"column":5,"nodeType":"64","endLine":75,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":80,"column":5,"nodeType":"64","endLine":80,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":85,"column":5,"nodeType":"64","endLine":85,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":28,"column":13,"nodeType":"69","messageId":"70","endLine":28,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":137,"column":9,"nodeType":"64","endLine":137,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":138,"column":9,"nodeType":"64","endLine":138,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":201,"column":9,"nodeType":"64","endLine":201,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":202,"column":9,"nodeType":"64","endLine":202,"endColumn":50},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]