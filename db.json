{
  "posts": [
    {
      "title" : "Hello World",
      "time" : "6:25",
      "day" : "Tue",
      "date" : "Feb 15 2022",
      "text" : "I have been recommended to start documenting my progress in programming. This blog is meant to document that process. I first started using HTML for my MySpace page in 2009 and continued on to make websites from 2010 - 2012. I would like to thank my late friend David Braun for his friendship and mentorship; he helped me many times with using CSS and JavaScript and was an inspiration to me. \n My current goal is to get a job in Web Development. My plan is to thoroughly learn the tech stack of HTML5, CSS3, and JS. Eventually I want to learn some back-end frameworks such as Ruby on Rails. \n Last week was my first week returning to HTML and CSS in almost a decade. I have started by following a YouTube tutorial and creating the portfolio website shown in said tutorial. I learned several things through the process. This was the first time I had ever used HSL color codes, and custom variables. I have also begun a free course at freecodecamp.org for responsive web design principles: it covers HTML basics, CSS basics, and some accessibility features. HTML5 brought some new features such as the header, nav, main, section, and footer tags. I learned how to make gradients in CSS which blew my mind. I used to create images to give my website the appearance of having a drop-shadow or gradient. \n One of my final projects that I had made used a CSS boilerplate called 'Skeleton'. It was something completely new to me and I've recently started learning of the new options for creating responsive content with CSS. \n I have a day left before I will finish the first part of this course and then I will start on creating a few very basic projects. After that I will be moving on to JS.",
      "id": 0
    },
    {
      "title" : "HackerRank Certified",
      "time" : "19:23",
      "day" : "Wed",
      "date" : "Feb 16 2022",
      "text" : "Yesterday I finished the course part of freeCodeCamp's HTML/CSS course and I started working through some of the projects. On the first project, a tribute page, I lazily put a basic site together that fulfilled the user stories. On the second project, a survey, I mimicked the design of their example survey site. \n I created my first GitHub account! I've used repositories from GH for years but had never considered creating an account until now. \n Today I received my first certificate in CSS through HackerRank for whatever that's worth. I stumbled across the website through watching YouTube videos and decided to take their skill assessment. It was 8 multiple choice questions and I was surprised when I passed it... seeing as how I've only returned to CSS effective 1 week ago. One of the questions was on the use of ellipsis - which I had never seen or used before. I'm unaware of which questions I answered correctly, however, it wasn't difficult to determine the outcome of the code based on the properties and values I knew. \n I'm really looking forward to completing this survey project. I am going to start TheOdinProject's HTML/CSS course while I finish up on some projects through freeCodeCamp. I'm planning to round out the next 3-4 weeks with more projects and then I will begin to tackle JavaScript.",
      "id": 1
    },
    {
      "title" : "Flexbox Froggy",
      "time" : "14:01",
      "day" : "Fri",
      "date" : "Feb 18 2020",
      "text" : "I've started learning how to use Git and GitHub. I encountered a problem while modifying files locally and couldn't find a solution on Google or StackOverflow. I resorted to asking a friend of mine to help me solve the problem. He pointed out that I have to save the file locally before Git will recognize that the file has been modified. It was humorous how simple of a solution it was. \n He reviewed with me all things Git related including merge requests. He's volunteered to mentor me in my journey through development. I feel extremely lucky to have his support. He's shared many resources with me already and I have a lot of work to do. One resource he shared helps to practice using CSS' Flexbox: Flexbox Froggy. It was really fun to play through and expanded what I already knew about it. \n I'm going to start pushing all of the projects I've been working on locally to GitHub.",
      "id": 2
    },
    {
      "title" : "Thanks Vlad!",
      "time" : "14:59",
      "day" : "Tue",
      "date" : "Feb 22 2022",
      "text" : "This weekend I met with my friend Vlad: we talked about machine learning and our experiences in programming. I could relate what he was saying about the different types of models to my ambitious project of creating a database using machine learning. He was able to give me a lot of advice about going into the field, plus he loaned me one of his laptops which I'm using right now - thanks Vlad! \n This week I'm attempting to finish up with courses on CSS from freeCodeCamp and The Odin Project. Next week I will start fresh with JS. I'm really excited and I can't wait to crack into it. \n Today I'm going to learn how to use PostCSS as a way to ensure that my styling is functional on each browser. CSS has become a lot easier recently and I'm trying to learn ways of writing cleaner code. I've become very comfortable with using Git and GitHub, although, I would like to spend more time coding and making more commits.",
      "id": 3
    },
    {
      "title" : "JavaScript Challenges",
      "time" : "9:40",
      "day" : "Thu",
      "date" : "Feb 24 2022",
      "text" : "My original plan was to spend the rest of this week working with CSS and to start JS next week, however, CSS became too easy and repetitive so I jumped into JS yesterday. I started looking at The Odin Project's fundamentals on JS but I find that JavaScript.info has better documentation. Eventually I will use The Odin Project's JavaScript course to complete some projects. \n My first two days with JavaScript were challenging. I haven't been in the practice of studying this intensively for some time. I have been getting headaches more frequently than before. I feel very lucky to have friends who are willing and able to answer any questions I have. \n Recently, despite spending many hours a day studying and programming, I feel that I haven't been making progress.",
      "id": 4
    },
    {
      "title" : "Thanks Pae!",
      "time" : "14:46",
      "day" : "Thu",
      "date" : "Mar 3 2022",
      "text" : "I have been preoccupied over the past week and wasn't able to study as much as I would've liked. I hope to get back to studying more. I've started to miss the simplicity off CSS. I think with more time and more practice JavaScript will become 'simple' and I will move on to things like React or Vue. \n Yesterday I studied objects: I stumbled across a task which I couldn't solve by merging what I knew on functions with what I learned on objects. Pae showed me the best practice. Instead of assigning the object to a variable and then calling that variable in the function, I can call the function with the argument of the object. Thanks Pae!",
      "id": 5
    },
    {
      "title" : "Start of Google Front-End Project",
      "time" : "13:28",
      "day" : "Fri",
      "date" : "Apr 1 2022",
      "text" : "It's been one month since my last blog post. I have been engulfed by my latest project. I had expected to completely finish this project in only 2 weeks, however it has taken me much longer. Some days I am able to put 10+ hours into it and other days there's considerably less or none at all. \n I have had the layout completed for some time now but I've been adding certain functionalities to the page and tweaking the responsiveness to try to get it to be pixel-perfect in comparison to Google's website. Currently the footer and header are pixel perfect. The footer needs to be adapted so that it mimics the responsiveness of Google's website, which is to create an overflow along the y axis when the page is unable to place all components on the page. \n I have added the ability to change language on the website through importing i18next's language package. It's a great tool and it's the first time I've used it. I currently am not able to change back to English after changing to Spanish. This is something that I'm not able to do on the real website either, however, it's something I wish they had implemented and thus it's something I'm working on. Using i18next is so much more convenient and accurate than using the Google Translate-plugin which I had used in the 2000's. \n I have also added the ability to change the website theme. I've done my best to make both themes as color accurate as possible to the real Google website. I used styledComponents to create a button that changes themes. It's similar to how I used to swap the reference to the stylesheets using solely CSS, however, this new approach is a cleaner and more reusable method. \n Today I have spent about 2 hours going through every line of CSS in my project and removing a lot of unneeded fluff. Over the past month of working on this project I've created some redundancies and it feels great to have them wiped clean. The code is much more readable and organized. I've enjoyed using ESLint to ensure my styles have the same structure throughout the project. \n In order to complete this project I have to: \n Fix a bug with the dark mode (upon closing the settings panel in the footer the theme switches to light mode), create the ability of returning to English after language change, fix responsiveness of footer scroll, add Google-Apps panel onClick, and to add search bar functionality. \n Unfortunately, my friend has been too busy to offer his assistance in the past few weeks. This has created several delays in the project. Nonetheless, I have slowly (sometimes over a few days or a week) been able to solve some of the problems that have been plaguing me.",
      "id": 6
    },
    {
      "title" : "Slow And Steady",
      "time" : "18:38",
      "day" : "Tue",
      "date" : "Apr 12 2022",
      "text" : "I have been working on my Google project and I continue to be plagued by a few problems. Since my last post I have: \n Created the Google Apps panel (styling and dark theme), minimized the amount of code required for switching between dark and light mode, corrected light and dark styles to be closer to real website, adjusted the style of search bar tooltips, added tooltip labels to i18next keys, added form validation to the search bar, and additional minor changes. \n Upon adding form validation to the search bar I coincidentally broke the form reset button. My to-do list for the remainder of the project is as follows: \n Fix i18n language switch, update footer responsiveness for verticality, fix theme change bug, save theme preference locally, fix search bar form reset button, add event listener for Google App-panel icon, and to fix GitHub pages. \n I'm looking forward to finishing these tasks as I feel satisfaction when the functionality and appearance starts to more closely resemble that of the actual Google search page.",
      "id": 7
    },
    {
      "title" : "404",
      "time" : "14:29",
      "day" : "Thu",
      "date" : "Apr 14 2022",
      "text" : "A step closer: I have fixed the i18next language switch, and the reset button on the search bar. Both were relatively easy. \n While I was watching YouTube videos on React hooks, I stumbled on a video which talked about creating a 404 page using BrowserRouter (react-router-dom). It wasn't a feature I was initially thinking of implementing. I also added the i18next keys to the page so that the language is the same as the selected language on the main page. \n I've played around with styled-components and found that when I moved the theme toggle-switch to the main App file, it works as intended. Upon trying to locate a solution to exposing my nested components inside the App function, I found React Context. I have yet to implement it but it will allow me to pass data down through the component tree. This will allow the theme to be switched and for the user preference to be stored locally. I deployed a build of my project to GitHub pages. Unfortunately, it still has not worked. I will try again later. \n My goals are to update footer responsiveness for verticality (use flex-grow), fix theme change bug (use React Context), save theme preference locally (gets fixed with React Context), add event listener for Google App-panel icon (use props), fix GitHub pages, and to add a dark theme to the 404 page.",
      "id": 8
    },
    {
      "title" : "Google Project Finished! (v1)",
      "time" : "19:30",
      "day" : "Tue",
      "date" : "Apr 19 2022",
      "text" : "Today I finished my first React project ever, and my first webdev project of my memory in the past decade. I am very satisfied with the end result. I will revisit the project from time to time as my skills in React progress, that way I can write cleaner code. I will also keep the project updated as Google continues to update their search engine page. \n I did not copy Google exactly, as there were some features (and some changes they made while I was working on the project) that I didn't like, or that I didn't want to implement in my project (such as the speech to text feature for the search input). I did add a few features that I would have expected Google to have. \n I feel much more comfortable with React and Git than I did before. For my next project I will be using React with Typescript and TailwindCSS. This project will be a simple portfolio page for myself and I want to challenge myself in learning something new. I initially intended on using TailwindCSS with this Google project, however, due to the specificity of the design, I think it was simpler to instead create my own classes. \n During this project I've had many days where I could get nothing to work as intended. There were many days of researching, reading StackOverflow, reading documentation on hooks, etc. I'm continuing my progress with React now by starting a free course as well as watching plenty of React-related YouTube videos. Despite the growing pains, it is extremely rewarding when things finally make sense and there are no more bugs. \n I will start my portfolio project tomorrow, stay tuned!",
      "id": 9
    },
    {
      "title" : "Start of Portfolio Project",
      "time" : "19:30",
      "day" : "Fri",
      "date" : "Apr 22 2022",
      "text" : "I've been working on my latest project using TailwindCSS and TypeScript with React. Neither TailwindCSS nor TypeScript have been intuitive. I have spent hours scanning the Tailwind documentation (which is thorough and very useful) to find the correct shorthand for a style I want to use. Overtime I assume I will start to memorize these classes as I've already memorized a few. I'm extremely glad that I've started this on an easy project and not on one with a lot of elements.",
      "id": 10
    },
    {
      "title" : "Return to Google Front-End Project",
      "time" : "19:38",
      "day" : "Tue",
      "date" : "Apr 26 2022",
      "text" : "Towards the end of last week I switched to working on the Google project. I fixed some things that Pae had recommended. These changes included making all components functional components and switching useEffect to change document title to using the react-helmet hook. \n My goal is to recreate the Google sign in/ sign up/ profile page, and to implement user authentication on the Google project using Axios. Over the weekend I set up the file structure for the additional pages and yesterday I began recreating the sign in and sign up pages. \n Once my portfolio page has been fully designed I will return to finish that project.",
      "id": 11
    },
    {
      "title" : "Page Setup",
      "time" : "17:59",
      "day" : "Wed",
      "date" : "Apr 27 2022",
      "text" : "Today I have finished the basics of four pages: sign in (email input), sign in (password input), forgot password, and create account page. \n This wasn't too difficult as there are a lot of overlapping components between the four pages. I have them all translated into Spanish and mostly resembling the actual Google website. I did remove some functionality as I don't wish to copy it exactly. I still need to add the i18next language change feature to each of these pages. Currently you can only change the language from the main search page. \n I quickly created a test page where I want to dump the data that I get from trying to create accounts. Tomorrow I will start working with Axios to see if I can hopefully get some accounts created and deleted. Once the account process is caught up to speed then I will return to adding JavaScript and form validation to the forms on each page. \n Today was the first time I have created a custom checkbox in CSS. It's a bit of an interesting work around and wasn't something that was initially intuitive. It works fine but in order to match the exact website I will have to add some JavaScript to the checkbox to have it feel as interactive as the real one.",
      "id": 12
    },
    {
      "title" : "Form Validation",
      "time" : "12:42",
      "day" : "Wed",
      "date" : "May 4 2022",
      "text" : "The past two days I have been spent switching my form validation for the Sign Up page to use react-hook-form. The validation isn't perfect yet. There's still a few discrepancies such as the email input showing an error prior to any user interaction. The new validation has reduced the number of lines of code by about 100. I am using vanilla react-hook-form without any other library for validation. My hope is that this will help to make the code more manageable for the future. There was a bit of a learning curve when it came to using react-hook-form for my specific use case. I found how to use multiple validations for each input through their GitHub request page.",
      "id": 13
    },
    {
      "title" : "Bourne... JSON Bourne",
      "time" : "22:02",
      "day" : "Thu",
      "date" : "May 12 2022",
      "text" : "I've gone over some bumps in the road migrating from my traditional form to using react-hook-form as well as with using Axios. Pae was able to help me out by cloning into my repository and letting me know that it was a problem with my form validation which was preventing my form from being posted. I was confused because I had all of the form validation errors working as intended. I quickly realized that in the ternary statements in the form validation I had used 'false : true' instead of 'true : false': this was causing issues with react-hook-form and thus had to be changed in order to correctly validate and post with Axios. After changing all of the ternary statements, the logic for the error messages no longer works and I will have to revisit these. \n I've decided to continue on without finishing the error messages at this time. I've decided to finish the functionality of the website before going into the details (such as error messages, styling, etc). I've learned through this project that I need to focus on functionality before styling. I've wasted considerable time during this project by having to do things two or three times. Although some of my habits (such as thoroughly researching and testing functionality of a website) allow me to appropriately plan and implement functions early on, other habits have undermined my punctuality. \n In the past two days I have created a second step of the registration form as well as place both steps inside a parent component where the state is stored. This allows me to store the user input from the first step while they are filling out and submitting the second step and then to finally post all user input. I feel very satisfied with this working and with very few obstacles. I created a JSON server using 'npm json-server'. I will research the options for storing a user session so that I can fetch their data across the session. Once I have completed this portion (along with testing the functionality by creating the remaining pages and fetching the data, editing the user password, and deleting account) I will add the remaining touches to the project before completion.",
      "id": 14
    },
    {
      "title" : "Routes, etc.",
      "time" : "7:23",
      "day" : "Mon",
      "date" : "May 30 2022",
      "text" : "Since my last post, the average amount of hours per week I've spent on this project has decreased. I've had some distractions that have kept me from finishing this project. Here are some of the things I've done in the past 2 weeks: \n Created the remaining pages and populated them with text, added a route using BrowserRouter to prevent loading account pages if no user instance exists, added a route to prevent loading sign in & sign up pages if user is logged in, corrected the validation errors for the sign-up email, added unique email validation to sign-up form, added password validation to sign-up form, added validation errors for sign-up birth date page, added the user panel that appears when signed in, fixed errors, changed file structure (moved components), added sidebar and header for my-account pages, added React Router NavLink to sidebar and header for my-account pages to show active page, added content to my account & home page, migrated forms from traditional HTML to useForm on sign-in pages, added language switch to all sign-in and sign-up pages, added Spanish to all error messages, updated translation file to organize by each page and each component, and started to add responsiveness to my-account pages. \n My goal for this week is to: \n Add responsiveness to sign-in and sign-up pages, correct responsiveness of my-account pages, add responsiveness to update contact pages, correct 404 errors for Axios PUT and DELETE requests, and to populate all pages with content. \n My goals for the following week are to add dark theme to sign-in, sign-up, and all my-account pages, and fix the GitHub page hosting error. I have some remaining ideas I would like to implement in this project that are very small but I will wait until I finish my initial goals.",
      "id": 15
    },
    {
      "title" : "Let There Be Users!",
      "time" : "16:24",
      "day" : "Fri",
      "date" : "Jun 3 2022",
      "text" : "I am happy to say that I have completed all of my goals for this week. I spent a lot of time on Monday and Tuesday making and altering media queries for the responsive layouts of the sign-in, sign-up, and three main my-account pages. On Wednesday I redid the layout for the edit contact pages and started populating all of the edit contact pages with photos and text from Google. \n On Thursday I finished up the content portion and made minor changes to the styling. Pae recommended I look into using Postman for my Axios errors and I installed the app. This morning I made some tests with different methods on Postman. It occurred to me that I was only getting PUT and DELETE errors while using a key for the request URL. I'm not entirely sure why, as GET requests work fine. Instead of requesting at `http://localhost:5000/users?email={email}` I instead used the id in the URL `http://localhost:5000/users/5` and the error I had been receiving went away. Success! I quickly tested that each edit contact page was working as intended. \n I've spent an hour or two today on a few more details, such as custom radio buttons for the gender page and fixing my delete account page after getting an error (I had forgotten to clear the local storage on delete, so the database was cleared but local storage was holding onto the user session). \n I'm very satisfied with the look, feel, and functionality of the project. I can't wait to fix the problem with GitHub pages so that I can show my friends what I've been working on. There's several things I would like to optimize with the code. There's a few things that are a bit repetitive. I have found solutions to many things and I think over time I will revisit this project and add-on to or revise what I've made so far. Maybe I will get around to using JWT for user authentication in the future.",
      "id": 16
    },
    {
      "title" : "It's Alive!",
      "time" : "12:52",
      "day" : "Thu",
      "date" : "Jun 9 2022",
      "text" : "I fixed the issue with deploying the build to GitHub pages. I updated the gh-pages dependency, and I modified and moved manifest.json and index.html to the public folder. I also restructured files to make things more organized. I added the dark theme for the user panel. I also created an app through Heroku which hosts my JSON server. I'm quite satisfied with the project. There's still a few bugs to work out. I've decided to not use dark-mode on every page but rather only the home page and the 404 not found page. I have struggled with calling ThemeProvider(styled-components) only on those 2 pages, while preventing dark-mode from rendering on any components outside of those pages. I will continue to work on that, along with some minor improvements. \n The design of the desktop version and mobile version of my portfolio have almost been completed so I will start working on programming them with TypeScript and TailwindCSS. This time I will be working from the mobile version and adding breakpoints to add responsiveness up towards the desktop version. This method saves me a lot of time in comparison to working from desktop > mobile.",
      "id": 17
    },
    {
      "title" : "Return to Portfolio Project",
      "time" : "14:40",
      "day" : "Fri",
      "date" : "Jun 17 2022",
      "text" : "This past week I've spent working on the portfolio project. It has taken longer than expected due to some oversight on the design process. There were a few things that weren't thought out and several image assets that had to be re-made. Overall I'm pretty happy with the result. I've just about finished the initial layout which is set at 320px for the iPhone 5. The blog overlay part was an interesting task. When the user clicks on the blog post it expands and they can click right or left to go to the next blog post or the previous. I also added a react-swipeable hook which allows users to swipe left or right on touchscreen devices. This is the first time that I've ever added a feature for touchscreen functionality. The only inconvenience to this is that I have to push to GitHub and deploy to GitHub pages before I can test it on my phone, as I don't work from a touchscreen device. \n I created a new Heroku app to host my database on, which is where I've imported my blog posts. \n I've grown more comfortable using Tailwind CSS. Once I commit the tailwind class to memory, development goes much faster than using traditional CSS classes. There are still many custom CSS classes that I've made, which reduces the amount of code and increases readability for certain components. \n As this project is written using TypeScript, I find it very useful to have the added error messages that come before using the Chrome Dev Tools console. This project is not complicated in anyway, so the types I'm using are all very simple. I plan to enable TypeScript error checking even on future projects where I'm using vanilla ReactJS. It's definitely a time saver. \n This coming week I will try to finish the project by extending the Tailwind classes to the various breakpoints I've set. There's six breakpoints but I'm expecting it will go quickly as there's minimal content and the functionality is all present.",
      "id": 18
    }
  ]
}